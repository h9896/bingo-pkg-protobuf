// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: services/delivery/v1/trade_msg.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderSide int32

const (
	OrderSide_ORDER_SIDE_UNSPECIFIED OrderSide = 0
	OrderSide_BUY                    OrderSide = 1
	OrderSide_SELL                   OrderSide = 2
)

// Enum value maps for OrderSide.
var (
	OrderSide_name = map[int32]string{
		0: "ORDER_SIDE_UNSPECIFIED",
		1: "BUY",
		2: "SELL",
	}
	OrderSide_value = map[string]int32{
		"ORDER_SIDE_UNSPECIFIED": 0,
		"BUY":                    1,
		"SELL":                   2,
	}
)

func (x OrderSide) Enum() *OrderSide {
	p := new(OrderSide)
	*p = x
	return p
}

func (x OrderSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderSide) Descriptor() protoreflect.EnumDescriptor {
	return file_services_delivery_v1_trade_msg_proto_enumTypes[0].Descriptor()
}

func (OrderSide) Type() protoreflect.EnumType {
	return &file_services_delivery_v1_trade_msg_proto_enumTypes[0]
}

func (x OrderSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderSide.Descriptor instead.
func (OrderSide) EnumDescriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{0}
}

type PositionSide int32

const (
	PositionSide_BOTH  PositionSide = 0
	PositionSide_LONG  PositionSide = 1
	PositionSide_SHORT PositionSide = 2
)

// Enum value maps for PositionSide.
var (
	PositionSide_name = map[int32]string{
		0: "BOTH",
		1: "LONG",
		2: "SHORT",
	}
	PositionSide_value = map[string]int32{
		"BOTH":  0,
		"LONG":  1,
		"SHORT": 2,
	}
)

func (x PositionSide) Enum() *PositionSide {
	p := new(PositionSide)
	*p = x
	return p
}

func (x PositionSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PositionSide) Descriptor() protoreflect.EnumDescriptor {
	return file_services_delivery_v1_trade_msg_proto_enumTypes[1].Descriptor()
}

func (PositionSide) Type() protoreflect.EnumType {
	return &file_services_delivery_v1_trade_msg_proto_enumTypes[1]
}

func (x PositionSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PositionSide.Descriptor instead.
func (PositionSide) EnumDescriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{1}
}

type OrderType int32

const (
	OrderType_ORDER_TYPE_UNSPECIFIED OrderType = 0
	OrderType_LIMIT                  OrderType = 1
	OrderType_MARKET                 OrderType = 2
	OrderType_STOP                   OrderType = 3
	OrderType_STOP_MARKET            OrderType = 4
	OrderType_TAKE_PROFIT            OrderType = 5
	OrderType_TAKE_PROFIT_MARKET     OrderType = 6
	OrderType_TRAILING_STOP_MARKET   OrderType = 7
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "ORDER_TYPE_UNSPECIFIED",
		1: "LIMIT",
		2: "MARKET",
		3: "STOP",
		4: "STOP_MARKET",
		5: "TAKE_PROFIT",
		6: "TAKE_PROFIT_MARKET",
		7: "TRAILING_STOP_MARKET",
	}
	OrderType_value = map[string]int32{
		"ORDER_TYPE_UNSPECIFIED": 0,
		"LIMIT":                  1,
		"MARKET":                 2,
		"STOP":                   3,
		"STOP_MARKET":            4,
		"TAKE_PROFIT":            5,
		"TAKE_PROFIT_MARKET":     6,
		"TRAILING_STOP_MARKET":   7,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_services_delivery_v1_trade_msg_proto_enumTypes[2].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_services_delivery_v1_trade_msg_proto_enumTypes[2]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{2}
}

type TimeInForce int32

const (
	TimeInForce_TIME_IN_FORCE_UNSPECIFIED TimeInForce = 0
	// Good till cancel
	TimeInForce_GTC TimeInForce = 1
	// Immediate or Cancel
	TimeInForce_IOC TimeInForce = 2
	// Fill or Kill
	TimeInForce_FOK TimeInForce = 3
	// Good till crossing
	TimeInForce_GTX TimeInForce = 4
)

// Enum value maps for TimeInForce.
var (
	TimeInForce_name = map[int32]string{
		0: "TIME_IN_FORCE_UNSPECIFIED",
		1: "GTC",
		2: "IOC",
		3: "FOK",
		4: "GTX",
	}
	TimeInForce_value = map[string]int32{
		"TIME_IN_FORCE_UNSPECIFIED": 0,
		"GTC":                       1,
		"IOC":                       2,
		"FOK":                       3,
		"GTX":                       4,
	}
)

func (x TimeInForce) Enum() *TimeInForce {
	p := new(TimeInForce)
	*p = x
	return p
}

func (x TimeInForce) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeInForce) Descriptor() protoreflect.EnumDescriptor {
	return file_services_delivery_v1_trade_msg_proto_enumTypes[3].Descriptor()
}

func (TimeInForce) Type() protoreflect.EnumType {
	return &file_services_delivery_v1_trade_msg_proto_enumTypes[3]
}

func (x TimeInForce) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeInForce.Descriptor instead.
func (TimeInForce) EnumDescriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{3}
}

type WorkingType int32

const (
	WorkingType_WORKING_TYPE_UNSPECIFIED WorkingType = 0
	WorkingType_MARK_PRICE               WorkingType = 1
	WorkingType_CONTRACT_PRICE           WorkingType = 2
)

// Enum value maps for WorkingType.
var (
	WorkingType_name = map[int32]string{
		0: "WORKING_TYPE_UNSPECIFIED",
		1: "MARK_PRICE",
		2: "CONTRACT_PRICE",
	}
	WorkingType_value = map[string]int32{
		"WORKING_TYPE_UNSPECIFIED": 0,
		"MARK_PRICE":               1,
		"CONTRACT_PRICE":           2,
	}
)

func (x WorkingType) Enum() *WorkingType {
	p := new(WorkingType)
	*p = x
	return p
}

func (x WorkingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkingType) Descriptor() protoreflect.EnumDescriptor {
	return file_services_delivery_v1_trade_msg_proto_enumTypes[4].Descriptor()
}

func (WorkingType) Type() protoreflect.EnumType {
	return &file_services_delivery_v1_trade_msg_proto_enumTypes[4]
}

func (x WorkingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkingType.Descriptor instead.
func (WorkingType) EnumDescriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{4}
}

type ResponseType int32

const (
	ResponseType_RESPONSE_TYPE_UNSPECIFIED ResponseType = 0
	ResponseType_ACK                       ResponseType = 1
	ResponseType_RESULT                    ResponseType = 2
)

// Enum value maps for ResponseType.
var (
	ResponseType_name = map[int32]string{
		0: "RESPONSE_TYPE_UNSPECIFIED",
		1: "ACK",
		2: "RESULT",
	}
	ResponseType_value = map[string]int32{
		"RESPONSE_TYPE_UNSPECIFIED": 0,
		"ACK":                       1,
		"RESULT":                    2,
	}
)

func (x ResponseType) Enum() *ResponseType {
	p := new(ResponseType)
	*p = x
	return p
}

func (x ResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_services_delivery_v1_trade_msg_proto_enumTypes[5].Descriptor()
}

func (ResponseType) Type() protoreflect.EnumType {
	return &file_services_delivery_v1_trade_msg_proto_enumTypes[5]
}

func (x ResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseType.Descriptor instead.
func (ResponseType) EnumDescriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{5}
}

type OrderStatus int32

const (
	OrderStatus_ORDER_STATUS_UNSPECIFIED OrderStatus = 0
	OrderStatus_NEW                      OrderStatus = 1
	OrderStatus_PARTIALLY_FILLED         OrderStatus = 2
	OrderStatus_FILLED                   OrderStatus = 3
	OrderStatus_CANCELED                 OrderStatus = 4
	OrderStatus_EXPIRED                  OrderStatus = 5
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "ORDER_STATUS_UNSPECIFIED",
		1: "NEW",
		2: "PARTIALLY_FILLED",
		3: "FILLED",
		4: "CANCELED",
		5: "EXPIRED",
	}
	OrderStatus_value = map[string]int32{
		"ORDER_STATUS_UNSPECIFIED": 0,
		"NEW":                      1,
		"PARTIALLY_FILLED":         2,
		"FILLED":                   3,
		"CANCELED":                 4,
		"EXPIRED":                  5,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_services_delivery_v1_trade_msg_proto_enumTypes[6].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_services_delivery_v1_trade_msg_proto_enumTypes[6]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{6}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{0}
}

type ChangePositionModeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// YES	"true": Hedge Mode; "false": One-way Mode
	DualSidePosition string `protobuf:"bytes,1,opt,name=dualSidePosition,proto3" json:"dualSidePosition,omitempty"`
	RecvWindow       int64  `protobuf:"varint,2,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *ChangePositionModeRequest) Reset() {
	*x = ChangePositionModeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePositionModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePositionModeRequest) ProtoMessage() {}

func (x *ChangePositionModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePositionModeRequest.ProtoReflect.Descriptor instead.
func (*ChangePositionModeRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{1}
}

func (x *ChangePositionModeRequest) GetDualSidePosition() string {
	if x != nil {
		return x.DualSidePosition
	}
	return ""
}

func (x *ChangePositionModeRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type ChangePositionModeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ChangePositionModeResponse) Reset() {
	*x = ChangePositionModeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePositionModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePositionModeResponse) ProtoMessage() {}

func (x *ChangePositionModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePositionModeResponse.ProtoReflect.Descriptor instead.
func (*ChangePositionModeResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{2}
}

func (x *ChangePositionModeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ChangePositionModeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetPositionModeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DualSidePosition bool `protobuf:"varint,1,opt,name=dualSidePosition,proto3" json:"dualSidePosition,omitempty"`
}

func (x *GetPositionModeResponse) Reset() {
	*x = GetPositionModeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPositionModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPositionModeResponse) ProtoMessage() {}

func (x *GetPositionModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPositionModeResponse.ProtoReflect.Descriptor instead.
func (*GetPositionModeResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{3}
}

func (x *GetPositionModeResponse) GetDualSidePosition() bool {
	if x != nil {
		return x.DualSidePosition
	}
	return false
}

type NewOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symobl           string       `protobuf:"bytes,1,opt,name=symobl,proto3" json:"symobl,omitempty"`
	Side             OrderSide    `protobuf:"varint,2,opt,name=side,proto3,enum=services.delivery.v1.OrderSide" json:"side,omitempty"`
	PositionSide     PositionSide `protobuf:"varint,3,opt,name=positionSide,proto3,enum=services.delivery.v1.PositionSide" json:"positionSide,omitempty"`
	Type             OrderType    `protobuf:"varint,4,opt,name=type,proto3,enum=services.delivery.v1.OrderType" json:"type,omitempty"`
	Quantity         float64      `protobuf:"fixed64,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ReduceOnly       string       `protobuf:"bytes,6,opt,name=reduceOnly,proto3" json:"reduceOnly,omitempty"`
	Price            float64      `protobuf:"fixed64,7,opt,name=price,proto3" json:"price,omitempty"`
	NewClientOrderId string       `protobuf:"bytes,8,opt,name=newClientOrderId,proto3" json:"newClientOrderId,omitempty"`
	StopPrice        float64      `protobuf:"fixed64,9,opt,name=stopPrice,proto3" json:"stopPrice,omitempty"`
	ClosePosition    string       `protobuf:"bytes,10,opt,name=closePosition,proto3" json:"closePosition,omitempty"`
	ActivationPrice  float64      `protobuf:"fixed64,11,opt,name=activationPrice,proto3" json:"activationPrice,omitempty"`
	CallbackRate     float64      `protobuf:"fixed64,12,opt,name=callbackRate,proto3" json:"callbackRate,omitempty"`
	WorkingType      WorkingType  `protobuf:"varint,13,opt,name=workingType,proto3,enum=services.delivery.v1.WorkingType" json:"workingType,omitempty"`
	PriceProtect     string       `protobuf:"bytes,14,opt,name=priceProtect,proto3" json:"priceProtect,omitempty"`
	NewOrderRespType ResponseType `protobuf:"varint,15,opt,name=newOrderRespType,proto3,enum=services.delivery.v1.ResponseType" json:"newOrderRespType,omitempty"`
	TimeInForce      TimeInForce  `protobuf:"varint,16,opt,name=timeInForce,proto3,enum=services.delivery.v1.TimeInForce" json:"timeInForce,omitempty"`
	RecvWindow       int64        `protobuf:"varint,17,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *NewOrderRequest) Reset() {
	*x = NewOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOrderRequest) ProtoMessage() {}

func (x *NewOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOrderRequest.ProtoReflect.Descriptor instead.
func (*NewOrderRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{4}
}

func (x *NewOrderRequest) GetSymobl() string {
	if x != nil {
		return x.Symobl
	}
	return ""
}

func (x *NewOrderRequest) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_ORDER_SIDE_UNSPECIFIED
}

func (x *NewOrderRequest) GetPositionSide() PositionSide {
	if x != nil {
		return x.PositionSide
	}
	return PositionSide_BOTH
}

func (x *NewOrderRequest) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *NewOrderRequest) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *NewOrderRequest) GetReduceOnly() string {
	if x != nil {
		return x.ReduceOnly
	}
	return ""
}

func (x *NewOrderRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *NewOrderRequest) GetNewClientOrderId() string {
	if x != nil {
		return x.NewClientOrderId
	}
	return ""
}

func (x *NewOrderRequest) GetStopPrice() float64 {
	if x != nil {
		return x.StopPrice
	}
	return 0
}

func (x *NewOrderRequest) GetClosePosition() string {
	if x != nil {
		return x.ClosePosition
	}
	return ""
}

func (x *NewOrderRequest) GetActivationPrice() float64 {
	if x != nil {
		return x.ActivationPrice
	}
	return 0
}

func (x *NewOrderRequest) GetCallbackRate() float64 {
	if x != nil {
		return x.CallbackRate
	}
	return 0
}

func (x *NewOrderRequest) GetWorkingType() WorkingType {
	if x != nil {
		return x.WorkingType
	}
	return WorkingType_WORKING_TYPE_UNSPECIFIED
}

func (x *NewOrderRequest) GetPriceProtect() string {
	if x != nil {
		return x.PriceProtect
	}
	return ""
}

func (x *NewOrderRequest) GetNewOrderRespType() ResponseType {
	if x != nil {
		return x.NewOrderRespType
	}
	return ResponseType_RESPONSE_TYPE_UNSPECIFIED
}

func (x *NewOrderRequest) GetTimeInForce() TimeInForce {
	if x != nil {
		return x.TimeInForce
	}
	return TimeInForce_TIME_IN_FORCE_UNSPECIFIED
}

func (x *NewOrderRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type NewOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientOrderId string       `protobuf:"bytes,1,opt,name=clientOrderId,proto3" json:"clientOrderId,omitempty"`
	CumQty        float64      `protobuf:"fixed64,2,opt,name=cumQty,proto3" json:"cumQty,omitempty"`
	CumBase       float64      `protobuf:"fixed64,3,opt,name=cumBase,proto3" json:"cumBase,omitempty"`
	ExecutedQty   float64      `protobuf:"fixed64,4,opt,name=executedQty,proto3" json:"executedQty,omitempty"`
	OrderId       int64        `protobuf:"varint,5,opt,name=orderId,proto3" json:"orderId,omitempty"`
	AvgPrice      float64      `protobuf:"fixed64,6,opt,name=avgPrice,proto3" json:"avgPrice,omitempty"`
	OrigQty       float64      `protobuf:"fixed64,7,opt,name=origQty,proto3" json:"origQty,omitempty"`
	Price         float64      `protobuf:"fixed64,8,opt,name=price,proto3" json:"price,omitempty"`
	ReduceOnly    bool         `protobuf:"varint,9,opt,name=reduceOnly,proto3" json:"reduceOnly,omitempty"`
	Side          OrderSide    `protobuf:"varint,10,opt,name=side,proto3,enum=services.delivery.v1.OrderSide" json:"side,omitempty"`
	PositionSide  PositionSide `protobuf:"varint,11,opt,name=positionSide,proto3,enum=services.delivery.v1.PositionSide" json:"positionSide,omitempty"`
	Status        OrderStatus  `protobuf:"varint,12,opt,name=status,proto3,enum=services.delivery.v1.OrderStatus" json:"status,omitempty"`
	StopPrice     float64      `protobuf:"fixed64,13,opt,name=stopPrice,proto3" json:"stopPrice,omitempty"`
	ClosePosition bool         `protobuf:"varint,14,opt,name=closePosition,proto3" json:"closePosition,omitempty"`
	Symbol        string       `protobuf:"bytes,15,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Pair          string       `protobuf:"bytes,16,opt,name=pair,proto3" json:"pair,omitempty"`
	TimeInForce   TimeInForce  `protobuf:"varint,17,opt,name=timeInForce,proto3,enum=services.delivery.v1.TimeInForce" json:"timeInForce,omitempty"`
	Type          OrderType    `protobuf:"varint,18,opt,name=type,proto3,enum=services.delivery.v1.OrderType" json:"type,omitempty"`
	OrigType      OrderType    `protobuf:"varint,19,opt,name=origType,proto3,enum=services.delivery.v1.OrderType" json:"origType,omitempty"`
	ActivatePrice float64      `protobuf:"fixed64,20,opt,name=activatePrice,proto3" json:"activatePrice,omitempty"`
	PriceRate     float64      `protobuf:"fixed64,21,opt,name=priceRate,proto3" json:"priceRate,omitempty"`
	UpdateTime    int64        `protobuf:"varint,22,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	WorkingType   WorkingType  `protobuf:"varint,23,opt,name=workingType,proto3,enum=services.delivery.v1.WorkingType" json:"workingType,omitempty"`
	PriceProtect  bool         `protobuf:"varint,24,opt,name=priceProtect,proto3" json:"priceProtect,omitempty"`
}

func (x *NewOrderResponse) Reset() {
	*x = NewOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOrderResponse) ProtoMessage() {}

func (x *NewOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOrderResponse.ProtoReflect.Descriptor instead.
func (*NewOrderResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{5}
}

func (x *NewOrderResponse) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

func (x *NewOrderResponse) GetCumQty() float64 {
	if x != nil {
		return x.CumQty
	}
	return 0
}

func (x *NewOrderResponse) GetCumBase() float64 {
	if x != nil {
		return x.CumBase
	}
	return 0
}

func (x *NewOrderResponse) GetExecutedQty() float64 {
	if x != nil {
		return x.ExecutedQty
	}
	return 0
}

func (x *NewOrderResponse) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *NewOrderResponse) GetAvgPrice() float64 {
	if x != nil {
		return x.AvgPrice
	}
	return 0
}

func (x *NewOrderResponse) GetOrigQty() float64 {
	if x != nil {
		return x.OrigQty
	}
	return 0
}

func (x *NewOrderResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *NewOrderResponse) GetReduceOnly() bool {
	if x != nil {
		return x.ReduceOnly
	}
	return false
}

func (x *NewOrderResponse) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_ORDER_SIDE_UNSPECIFIED
}

func (x *NewOrderResponse) GetPositionSide() PositionSide {
	if x != nil {
		return x.PositionSide
	}
	return PositionSide_BOTH
}

func (x *NewOrderResponse) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *NewOrderResponse) GetStopPrice() float64 {
	if x != nil {
		return x.StopPrice
	}
	return 0
}

func (x *NewOrderResponse) GetClosePosition() bool {
	if x != nil {
		return x.ClosePosition
	}
	return false
}

func (x *NewOrderResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *NewOrderResponse) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *NewOrderResponse) GetTimeInForce() TimeInForce {
	if x != nil {
		return x.TimeInForce
	}
	return TimeInForce_TIME_IN_FORCE_UNSPECIFIED
}

func (x *NewOrderResponse) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *NewOrderResponse) GetOrigType() OrderType {
	if x != nil {
		return x.OrigType
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *NewOrderResponse) GetActivatePrice() float64 {
	if x != nil {
		return x.ActivatePrice
	}
	return 0
}

func (x *NewOrderResponse) GetPriceRate() float64 {
	if x != nil {
		return x.PriceRate
	}
	return 0
}

func (x *NewOrderResponse) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *NewOrderResponse) GetWorkingType() WorkingType {
	if x != nil {
		return x.WorkingType
	}
	return WorkingType_WORKING_TYPE_UNSPECIFIED
}

func (x *NewOrderResponse) GetPriceProtect() bool {
	if x != nil {
		return x.PriceProtect
	}
	return false
}

type CancelOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol            string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	OrderId           int64  `protobuf:"varint,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	OrigClientOrderId string `protobuf:"bytes,3,opt,name=origClientOrderId,proto3" json:"origClientOrderId,omitempty"`
	RecvWindow        int64  `protobuf:"varint,4,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *CancelOrderRequest) Reset() {
	*x = CancelOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderRequest) ProtoMessage() {}

func (x *CancelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderRequest.ProtoReflect.Descriptor instead.
func (*CancelOrderRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{6}
}

func (x *CancelOrderRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CancelOrderRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *CancelOrderRequest) GetOrigClientOrderId() string {
	if x != nil {
		return x.OrigClientOrderId
	}
	return ""
}

func (x *CancelOrderRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type CancelOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvgPrice      float64      `protobuf:"fixed64,1,opt,name=avgPrice,proto3" json:"avgPrice,omitempty"`
	ClientOrderId string       `protobuf:"bytes,2,opt,name=clientOrderId,proto3" json:"clientOrderId,omitempty"`
	CumQty        float64      `protobuf:"fixed64,3,opt,name=cumQty,proto3" json:"cumQty,omitempty"`
	CumBase       float64      `protobuf:"fixed64,4,opt,name=cumBase,proto3" json:"cumBase,omitempty"`
	ExecutedQty   float64      `protobuf:"fixed64,5,opt,name=executedQty,proto3" json:"executedQty,omitempty"`
	OrderId       int64        `protobuf:"varint,6,opt,name=orderId,proto3" json:"orderId,omitempty"`
	OrigQty       string       `protobuf:"bytes,7,opt,name=origQty,proto3" json:"origQty,omitempty"`
	OrigType      OrderType    `protobuf:"varint,8,opt,name=origType,proto3,enum=services.delivery.v1.OrderType" json:"origType,omitempty"`
	Price         float64      `protobuf:"fixed64,9,opt,name=price,proto3" json:"price,omitempty"`
	ReduceOnly    bool         `protobuf:"varint,10,opt,name=reduceOnly,proto3" json:"reduceOnly,omitempty"`
	Side          OrderSide    `protobuf:"varint,11,opt,name=side,proto3,enum=services.delivery.v1.OrderSide" json:"side,omitempty"`
	PositionSide  PositionSide `protobuf:"varint,12,opt,name=positionSide,proto3,enum=services.delivery.v1.PositionSide" json:"positionSide,omitempty"`
	Status        OrderStatus  `protobuf:"varint,13,opt,name=status,proto3,enum=services.delivery.v1.OrderStatus" json:"status,omitempty"`
	StopPrice     float64      `protobuf:"fixed64,14,opt,name=stopPrice,proto3" json:"stopPrice,omitempty"`
	ClosePosition bool         `protobuf:"varint,15,opt,name=closePosition,proto3" json:"closePosition,omitempty"`
	Symbol        string       `protobuf:"bytes,16,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Pair          string       `protobuf:"bytes,17,opt,name=pair,proto3" json:"pair,omitempty"`
	TimeInForce   TimeInForce  `protobuf:"varint,18,opt,name=timeInForce,proto3,enum=services.delivery.v1.TimeInForce" json:"timeInForce,omitempty"`
	Type          OrderType    `protobuf:"varint,19,opt,name=type,proto3,enum=services.delivery.v1.OrderType" json:"type,omitempty"`
	ActivatePrice float64      `protobuf:"fixed64,20,opt,name=activatePrice,proto3" json:"activatePrice,omitempty"`
	PriceRate     float64      `protobuf:"fixed64,21,opt,name=priceRate,proto3" json:"priceRate,omitempty"`
	UpdateTime    int64        `protobuf:"varint,22,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	WorkingType   WorkingType  `protobuf:"varint,23,opt,name=workingType,proto3,enum=services.delivery.v1.WorkingType" json:"workingType,omitempty"`
	PriceProtect  bool         `protobuf:"varint,24,opt,name=priceProtect,proto3" json:"priceProtect,omitempty"`
}

func (x *CancelOrderResponse) Reset() {
	*x = CancelOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderResponse) ProtoMessage() {}

func (x *CancelOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderResponse.ProtoReflect.Descriptor instead.
func (*CancelOrderResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{7}
}

func (x *CancelOrderResponse) GetAvgPrice() float64 {
	if x != nil {
		return x.AvgPrice
	}
	return 0
}

func (x *CancelOrderResponse) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

func (x *CancelOrderResponse) GetCumQty() float64 {
	if x != nil {
		return x.CumQty
	}
	return 0
}

func (x *CancelOrderResponse) GetCumBase() float64 {
	if x != nil {
		return x.CumBase
	}
	return 0
}

func (x *CancelOrderResponse) GetExecutedQty() float64 {
	if x != nil {
		return x.ExecutedQty
	}
	return 0
}

func (x *CancelOrderResponse) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *CancelOrderResponse) GetOrigQty() string {
	if x != nil {
		return x.OrigQty
	}
	return ""
}

func (x *CancelOrderResponse) GetOrigType() OrderType {
	if x != nil {
		return x.OrigType
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *CancelOrderResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CancelOrderResponse) GetReduceOnly() bool {
	if x != nil {
		return x.ReduceOnly
	}
	return false
}

func (x *CancelOrderResponse) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_ORDER_SIDE_UNSPECIFIED
}

func (x *CancelOrderResponse) GetPositionSide() PositionSide {
	if x != nil {
		return x.PositionSide
	}
	return PositionSide_BOTH
}

func (x *CancelOrderResponse) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *CancelOrderResponse) GetStopPrice() float64 {
	if x != nil {
		return x.StopPrice
	}
	return 0
}

func (x *CancelOrderResponse) GetClosePosition() bool {
	if x != nil {
		return x.ClosePosition
	}
	return false
}

func (x *CancelOrderResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CancelOrderResponse) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *CancelOrderResponse) GetTimeInForce() TimeInForce {
	if x != nil {
		return x.TimeInForce
	}
	return TimeInForce_TIME_IN_FORCE_UNSPECIFIED
}

func (x *CancelOrderResponse) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *CancelOrderResponse) GetActivatePrice() float64 {
	if x != nil {
		return x.ActivatePrice
	}
	return 0
}

func (x *CancelOrderResponse) GetPriceRate() float64 {
	if x != nil {
		return x.PriceRate
	}
	return 0
}

func (x *CancelOrderResponse) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *CancelOrderResponse) GetWorkingType() WorkingType {
	if x != nil {
		return x.WorkingType
	}
	return WorkingType_WORKING_TYPE_UNSPECIFIED
}

func (x *CancelOrderResponse) GetPriceProtect() bool {
	if x != nil {
		return x.PriceProtect
	}
	return false
}

var File_services_delivery_v1_trade_msg_proto protoreflect.FileDescriptor

var file_services_delivery_v1_trade_msg_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x73, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x22, 0x07, 0x0a, 0x05,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x67, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x64, 0x65, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x75,
	0x61, 0x6c, 0x53, 0x69, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x42,
	0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x45, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x64, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x64,
	0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x89, 0x06, 0x0a, 0x0f, 0x4e, 0x65,
	0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x6f, 0x62, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x6f, 0x62, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x69, 0x64, 0x65, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69,
	0x64, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x4f, 0x6e, 0x6c,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x4f,
	0x6e, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x65, 0x77,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x65, 0x77, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x12, 0x4e, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10,
	0x6e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x43, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0xbe, 0x07, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x6d, 0x51, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x63, 0x75, 0x6d, 0x51, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x6d, 0x42,
	0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x75, 0x6d, 0x42, 0x61,
	0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x51, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x64, 0x51, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72,
	0x69, 0x67, 0x51, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x69,
	0x67, 0x51, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x64, 0x75, 0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x69,
	0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12,
	0x46, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x69, 0x72, 0x12, 0x43, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65,
	0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x08,
	0x6f, 0x72, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x6f, 0x72, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x43, 0x0a,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x72, 0x69, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0xc1, 0x07,
	0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x6d, 0x51, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x63, 0x75, 0x6d, 0x51, 0x74, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x75, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x63, 0x75, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x64, 0x51, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x51, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x69, 0x67, 0x51, 0x74, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x69, 0x67, 0x51, 0x74, 0x79, 0x12,
	0x3b, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x4f, 0x6e,
	0x6c, 0x79, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64,
	0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64,
	0x65, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x12,
	0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73,
	0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x43, 0x0a, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72,
	0x63, 0x65, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12,
	0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x2a, 0x3a, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x16, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x49, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x55,
	0x59, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4c, 0x4c, 0x10, 0x02, 0x2a, 0x2d, 0x0a,
	0x0c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x42, 0x4f, 0x54, 0x48, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x4f, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x10, 0x02, 0x2a, 0x9c, 0x01, 0x0a,
	0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x4f, 0x50, 0x5f,
	0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x41, 0x4b, 0x45,
	0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x54, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x41, 0x4b,
	0x45, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x54, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x10,
	0x06, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x52, 0x41, 0x49, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54,
	0x4f, 0x50, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x10, 0x07, 0x2a, 0x50, 0x0a, 0x0b, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x49,
	0x4d, 0x45, 0x5f, 0x49, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x54, 0x43,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4f, 0x43, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x46,
	0x4f, 0x4b, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x54, 0x58, 0x10, 0x04, 0x2a, 0x4f, 0x0a,
	0x0b, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18,
	0x57, 0x4f, 0x52, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x41,
	0x52, 0x4b, 0x5f, 0x50, 0x52, 0x49, 0x43, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x50, 0x52, 0x49, 0x43, 0x45, 0x10, 0x02, 0x2a, 0x42,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x19, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54,
	0x10, 0x02, 0x2a, 0x71, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x18, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x41, 0x52, 0x54,
	0x49, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x46, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x46, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49,
	0x52, 0x45, 0x44, 0x10, 0x05, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x39, 0x38, 0x39, 0x36, 0x2f, 0x62, 0x69, 0x6e, 0x67, 0x6f, 0x2d,
	0x70, 0x6b, 0x67, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_delivery_v1_trade_msg_proto_rawDescOnce sync.Once
	file_services_delivery_v1_trade_msg_proto_rawDescData = file_services_delivery_v1_trade_msg_proto_rawDesc
)

func file_services_delivery_v1_trade_msg_proto_rawDescGZIP() []byte {
	file_services_delivery_v1_trade_msg_proto_rawDescOnce.Do(func() {
		file_services_delivery_v1_trade_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_delivery_v1_trade_msg_proto_rawDescData)
	})
	return file_services_delivery_v1_trade_msg_proto_rawDescData
}

var file_services_delivery_v1_trade_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_services_delivery_v1_trade_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_services_delivery_v1_trade_msg_proto_goTypes = []interface{}{
	(OrderSide)(0),                     // 0: services.delivery.v1.OrderSide
	(PositionSide)(0),                  // 1: services.delivery.v1.PositionSide
	(OrderType)(0),                     // 2: services.delivery.v1.OrderType
	(TimeInForce)(0),                   // 3: services.delivery.v1.TimeInForce
	(WorkingType)(0),                   // 4: services.delivery.v1.WorkingType
	(ResponseType)(0),                  // 5: services.delivery.v1.ResponseType
	(OrderStatus)(0),                   // 6: services.delivery.v1.OrderStatus
	(*Empty)(nil),                      // 7: services.delivery.v1.Empty
	(*ChangePositionModeRequest)(nil),  // 8: services.delivery.v1.ChangePositionModeRequest
	(*ChangePositionModeResponse)(nil), // 9: services.delivery.v1.ChangePositionModeResponse
	(*GetPositionModeResponse)(nil),    // 10: services.delivery.v1.GetPositionModeResponse
	(*NewOrderRequest)(nil),            // 11: services.delivery.v1.NewOrderRequest
	(*NewOrderResponse)(nil),           // 12: services.delivery.v1.NewOrderResponse
	(*CancelOrderRequest)(nil),         // 13: services.delivery.v1.CancelOrderRequest
	(*CancelOrderResponse)(nil),        // 14: services.delivery.v1.CancelOrderResponse
}
var file_services_delivery_v1_trade_msg_proto_depIdxs = []int32{
	0,  // 0: services.delivery.v1.NewOrderRequest.side:type_name -> services.delivery.v1.OrderSide
	1,  // 1: services.delivery.v1.NewOrderRequest.positionSide:type_name -> services.delivery.v1.PositionSide
	2,  // 2: services.delivery.v1.NewOrderRequest.type:type_name -> services.delivery.v1.OrderType
	4,  // 3: services.delivery.v1.NewOrderRequest.workingType:type_name -> services.delivery.v1.WorkingType
	5,  // 4: services.delivery.v1.NewOrderRequest.newOrderRespType:type_name -> services.delivery.v1.ResponseType
	3,  // 5: services.delivery.v1.NewOrderRequest.timeInForce:type_name -> services.delivery.v1.TimeInForce
	0,  // 6: services.delivery.v1.NewOrderResponse.side:type_name -> services.delivery.v1.OrderSide
	1,  // 7: services.delivery.v1.NewOrderResponse.positionSide:type_name -> services.delivery.v1.PositionSide
	6,  // 8: services.delivery.v1.NewOrderResponse.status:type_name -> services.delivery.v1.OrderStatus
	3,  // 9: services.delivery.v1.NewOrderResponse.timeInForce:type_name -> services.delivery.v1.TimeInForce
	2,  // 10: services.delivery.v1.NewOrderResponse.type:type_name -> services.delivery.v1.OrderType
	2,  // 11: services.delivery.v1.NewOrderResponse.origType:type_name -> services.delivery.v1.OrderType
	4,  // 12: services.delivery.v1.NewOrderResponse.workingType:type_name -> services.delivery.v1.WorkingType
	2,  // 13: services.delivery.v1.CancelOrderResponse.origType:type_name -> services.delivery.v1.OrderType
	0,  // 14: services.delivery.v1.CancelOrderResponse.side:type_name -> services.delivery.v1.OrderSide
	1,  // 15: services.delivery.v1.CancelOrderResponse.positionSide:type_name -> services.delivery.v1.PositionSide
	6,  // 16: services.delivery.v1.CancelOrderResponse.status:type_name -> services.delivery.v1.OrderStatus
	3,  // 17: services.delivery.v1.CancelOrderResponse.timeInForce:type_name -> services.delivery.v1.TimeInForce
	2,  // 18: services.delivery.v1.CancelOrderResponse.type:type_name -> services.delivery.v1.OrderType
	4,  // 19: services.delivery.v1.CancelOrderResponse.workingType:type_name -> services.delivery.v1.WorkingType
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_services_delivery_v1_trade_msg_proto_init() }
func file_services_delivery_v1_trade_msg_proto_init() {
	if File_services_delivery_v1_trade_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_delivery_v1_trade_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePositionModeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePositionModeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPositionModeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_delivery_v1_trade_msg_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_services_delivery_v1_trade_msg_proto_goTypes,
		DependencyIndexes: file_services_delivery_v1_trade_msg_proto_depIdxs,
		EnumInfos:         file_services_delivery_v1_trade_msg_proto_enumTypes,
		MessageInfos:      file_services_delivery_v1_trade_msg_proto_msgTypes,
	}.Build()
	File_services_delivery_v1_trade_msg_proto = out.File
	file_services_delivery_v1_trade_msg_proto_rawDesc = nil
	file_services_delivery_v1_trade_msg_proto_goTypes = nil
	file_services_delivery_v1_trade_msg_proto_depIdxs = nil
}
