// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: services/delivery/v1/trade_msg.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChangePositionModeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// YES	"true": Hedge Mode; "false": One-way Mode
	DualSidePosition string `protobuf:"bytes,1,opt,name=dualSidePosition,proto3" json:"dualSidePosition,omitempty"`
	RecvWindow       int64  `protobuf:"varint,2,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *ChangePositionModeRequest) Reset() {
	*x = ChangePositionModeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePositionModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePositionModeRequest) ProtoMessage() {}

func (x *ChangePositionModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePositionModeRequest.ProtoReflect.Descriptor instead.
func (*ChangePositionModeRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{0}
}

func (x *ChangePositionModeRequest) GetDualSidePosition() string {
	if x != nil {
		return x.DualSidePosition
	}
	return ""
}

func (x *ChangePositionModeRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type ChangePositionModeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ChangePositionModeResponse) Reset() {
	*x = ChangePositionModeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePositionModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePositionModeResponse) ProtoMessage() {}

func (x *ChangePositionModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePositionModeResponse.ProtoReflect.Descriptor instead.
func (*ChangePositionModeResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{1}
}

func (x *ChangePositionModeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ChangePositionModeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type NewOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol           string       `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Side             OrderSide    `protobuf:"varint,2,opt,name=side,proto3,enum=services.delivery.v1.OrderSide" json:"side,omitempty"`
	PositionSide     PositionSide `protobuf:"varint,3,opt,name=positionSide,proto3,enum=services.delivery.v1.PositionSide" json:"positionSide,omitempty"`
	Type             OrderType    `protobuf:"varint,4,opt,name=type,proto3,enum=services.delivery.v1.OrderType" json:"type,omitempty"`
	Quantity         float64      `protobuf:"fixed64,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ReduceOnly       string       `protobuf:"bytes,6,opt,name=reduceOnly,proto3" json:"reduceOnly,omitempty"`
	Price            float64      `protobuf:"fixed64,7,opt,name=price,proto3" json:"price,omitempty"`
	NewClientOrderId string       `protobuf:"bytes,8,opt,name=newClientOrderId,proto3" json:"newClientOrderId,omitempty"`
	StopPrice        float64      `protobuf:"fixed64,9,opt,name=stopPrice,proto3" json:"stopPrice,omitempty"`
	ClosePosition    string       `protobuf:"bytes,10,opt,name=closePosition,proto3" json:"closePosition,omitempty"`
	ActivationPrice  float64      `protobuf:"fixed64,11,opt,name=activationPrice,proto3" json:"activationPrice,omitempty"`
	CallbackRate     float64      `protobuf:"fixed64,12,opt,name=callbackRate,proto3" json:"callbackRate,omitempty"`
	WorkingType      WorkingType  `protobuf:"varint,13,opt,name=workingType,proto3,enum=services.delivery.v1.WorkingType" json:"workingType,omitempty"`
	PriceProtect     string       `protobuf:"bytes,14,opt,name=priceProtect,proto3" json:"priceProtect,omitempty"`
	NewOrderRespType ResponseType `protobuf:"varint,15,opt,name=newOrderRespType,proto3,enum=services.delivery.v1.ResponseType" json:"newOrderRespType,omitempty"`
	TimeInForce      TimeInForce  `protobuf:"varint,16,opt,name=timeInForce,proto3,enum=services.delivery.v1.TimeInForce" json:"timeInForce,omitempty"`
	RecvWindow       int64        `protobuf:"varint,17,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *NewOrderRequest) Reset() {
	*x = NewOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOrderRequest) ProtoMessage() {}

func (x *NewOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOrderRequest.ProtoReflect.Descriptor instead.
func (*NewOrderRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{2}
}

func (x *NewOrderRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *NewOrderRequest) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_ORDER_SIDE_UNSPECIFIED
}

func (x *NewOrderRequest) GetPositionSide() PositionSide {
	if x != nil {
		return x.PositionSide
	}
	return PositionSide_BOTH
}

func (x *NewOrderRequest) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *NewOrderRequest) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *NewOrderRequest) GetReduceOnly() string {
	if x != nil {
		return x.ReduceOnly
	}
	return ""
}

func (x *NewOrderRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *NewOrderRequest) GetNewClientOrderId() string {
	if x != nil {
		return x.NewClientOrderId
	}
	return ""
}

func (x *NewOrderRequest) GetStopPrice() float64 {
	if x != nil {
		return x.StopPrice
	}
	return 0
}

func (x *NewOrderRequest) GetClosePosition() string {
	if x != nil {
		return x.ClosePosition
	}
	return ""
}

func (x *NewOrderRequest) GetActivationPrice() float64 {
	if x != nil {
		return x.ActivationPrice
	}
	return 0
}

func (x *NewOrderRequest) GetCallbackRate() float64 {
	if x != nil {
		return x.CallbackRate
	}
	return 0
}

func (x *NewOrderRequest) GetWorkingType() WorkingType {
	if x != nil {
		return x.WorkingType
	}
	return WorkingType_WORKING_TYPE_UNSPECIFIED
}

func (x *NewOrderRequest) GetPriceProtect() string {
	if x != nil {
		return x.PriceProtect
	}
	return ""
}

func (x *NewOrderRequest) GetNewOrderRespType() ResponseType {
	if x != nil {
		return x.NewOrderRespType
	}
	return ResponseType_RESPONSE_TYPE_UNSPECIFIED
}

func (x *NewOrderRequest) GetTimeInForce() TimeInForce {
	if x != nil {
		return x.TimeInForce
	}
	return TimeInForce_TIME_IN_FORCE_UNSPECIFIED
}

func (x *NewOrderRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type NewOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientOrderId string       `protobuf:"bytes,1,opt,name=clientOrderId,proto3" json:"clientOrderId,omitempty"`
	CumQty        float64      `protobuf:"fixed64,2,opt,name=cumQty,proto3" json:"cumQty,omitempty"`
	CumBase       float64      `protobuf:"fixed64,3,opt,name=cumBase,proto3" json:"cumBase,omitempty"`
	ExecutedQty   float64      `protobuf:"fixed64,4,opt,name=executedQty,proto3" json:"executedQty,omitempty"`
	OrderId       int64        `protobuf:"varint,5,opt,name=orderId,proto3" json:"orderId,omitempty"`
	AvgPrice      float64      `protobuf:"fixed64,6,opt,name=avgPrice,proto3" json:"avgPrice,omitempty"`
	OrigQty       float64      `protobuf:"fixed64,7,opt,name=origQty,proto3" json:"origQty,omitempty"`
	Price         float64      `protobuf:"fixed64,8,opt,name=price,proto3" json:"price,omitempty"`
	ReduceOnly    bool         `protobuf:"varint,9,opt,name=reduceOnly,proto3" json:"reduceOnly,omitempty"`
	Side          OrderSide    `protobuf:"varint,10,opt,name=side,proto3,enum=services.delivery.v1.OrderSide" json:"side,omitempty"`
	PositionSide  PositionSide `protobuf:"varint,11,opt,name=positionSide,proto3,enum=services.delivery.v1.PositionSide" json:"positionSide,omitempty"`
	Status        OrderStatus  `protobuf:"varint,12,opt,name=status,proto3,enum=services.delivery.v1.OrderStatus" json:"status,omitempty"`
	StopPrice     float64      `protobuf:"fixed64,13,opt,name=stopPrice,proto3" json:"stopPrice,omitempty"`
	ClosePosition bool         `protobuf:"varint,14,opt,name=closePosition,proto3" json:"closePosition,omitempty"`
	Symbol        string       `protobuf:"bytes,15,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Pair          string       `protobuf:"bytes,16,opt,name=pair,proto3" json:"pair,omitempty"`
	TimeInForce   TimeInForce  `protobuf:"varint,17,opt,name=timeInForce,proto3,enum=services.delivery.v1.TimeInForce" json:"timeInForce,omitempty"`
	Type          OrderType    `protobuf:"varint,18,opt,name=type,proto3,enum=services.delivery.v1.OrderType" json:"type,omitempty"`
	OrigType      OrderType    `protobuf:"varint,19,opt,name=origType,proto3,enum=services.delivery.v1.OrderType" json:"origType,omitempty"`
	ActivatePrice float64      `protobuf:"fixed64,20,opt,name=activatePrice,proto3" json:"activatePrice,omitempty"`
	PriceRate     float64      `protobuf:"fixed64,21,opt,name=priceRate,proto3" json:"priceRate,omitempty"`
	UpdateTime    int64        `protobuf:"varint,22,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	WorkingType   WorkingType  `protobuf:"varint,23,opt,name=workingType,proto3,enum=services.delivery.v1.WorkingType" json:"workingType,omitempty"`
	PriceProtect  bool         `protobuf:"varint,24,opt,name=priceProtect,proto3" json:"priceProtect,omitempty"`
}

func (x *NewOrderResponse) Reset() {
	*x = NewOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOrderResponse) ProtoMessage() {}

func (x *NewOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOrderResponse.ProtoReflect.Descriptor instead.
func (*NewOrderResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{3}
}

func (x *NewOrderResponse) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

func (x *NewOrderResponse) GetCumQty() float64 {
	if x != nil {
		return x.CumQty
	}
	return 0
}

func (x *NewOrderResponse) GetCumBase() float64 {
	if x != nil {
		return x.CumBase
	}
	return 0
}

func (x *NewOrderResponse) GetExecutedQty() float64 {
	if x != nil {
		return x.ExecutedQty
	}
	return 0
}

func (x *NewOrderResponse) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *NewOrderResponse) GetAvgPrice() float64 {
	if x != nil {
		return x.AvgPrice
	}
	return 0
}

func (x *NewOrderResponse) GetOrigQty() float64 {
	if x != nil {
		return x.OrigQty
	}
	return 0
}

func (x *NewOrderResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *NewOrderResponse) GetReduceOnly() bool {
	if x != nil {
		return x.ReduceOnly
	}
	return false
}

func (x *NewOrderResponse) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_ORDER_SIDE_UNSPECIFIED
}

func (x *NewOrderResponse) GetPositionSide() PositionSide {
	if x != nil {
		return x.PositionSide
	}
	return PositionSide_BOTH
}

func (x *NewOrderResponse) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *NewOrderResponse) GetStopPrice() float64 {
	if x != nil {
		return x.StopPrice
	}
	return 0
}

func (x *NewOrderResponse) GetClosePosition() bool {
	if x != nil {
		return x.ClosePosition
	}
	return false
}

func (x *NewOrderResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *NewOrderResponse) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *NewOrderResponse) GetTimeInForce() TimeInForce {
	if x != nil {
		return x.TimeInForce
	}
	return TimeInForce_TIME_IN_FORCE_UNSPECIFIED
}

func (x *NewOrderResponse) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *NewOrderResponse) GetOrigType() OrderType {
	if x != nil {
		return x.OrigType
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *NewOrderResponse) GetActivatePrice() float64 {
	if x != nil {
		return x.ActivatePrice
	}
	return 0
}

func (x *NewOrderResponse) GetPriceRate() float64 {
	if x != nil {
		return x.PriceRate
	}
	return 0
}

func (x *NewOrderResponse) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *NewOrderResponse) GetWorkingType() WorkingType {
	if x != nil {
		return x.WorkingType
	}
	return WorkingType_WORKING_TYPE_UNSPECIFIED
}

func (x *NewOrderResponse) GetPriceProtect() bool {
	if x != nil {
		return x.PriceProtect
	}
	return false
}

type CancelOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol            string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	OrderId           int64  `protobuf:"varint,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	OrigClientOrderId string `protobuf:"bytes,3,opt,name=origClientOrderId,proto3" json:"origClientOrderId,omitempty"`
	RecvWindow        int64  `protobuf:"varint,4,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *CancelOrderRequest) Reset() {
	*x = CancelOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderRequest) ProtoMessage() {}

func (x *CancelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderRequest.ProtoReflect.Descriptor instead.
func (*CancelOrderRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{4}
}

func (x *CancelOrderRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CancelOrderRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *CancelOrderRequest) GetOrigClientOrderId() string {
	if x != nil {
		return x.OrigClientOrderId
	}
	return ""
}

func (x *CancelOrderRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type CancelOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvgPrice      float64      `protobuf:"fixed64,1,opt,name=avgPrice,proto3" json:"avgPrice,omitempty"`
	ClientOrderId string       `protobuf:"bytes,2,opt,name=clientOrderId,proto3" json:"clientOrderId,omitempty"`
	CumQty        float64      `protobuf:"fixed64,3,opt,name=cumQty,proto3" json:"cumQty,omitempty"`
	CumBase       float64      `protobuf:"fixed64,4,opt,name=cumBase,proto3" json:"cumBase,omitempty"`
	ExecutedQty   float64      `protobuf:"fixed64,5,opt,name=executedQty,proto3" json:"executedQty,omitempty"`
	OrderId       int64        `protobuf:"varint,6,opt,name=orderId,proto3" json:"orderId,omitempty"`
	OrigQty       string       `protobuf:"bytes,7,opt,name=origQty,proto3" json:"origQty,omitempty"`
	OrigType      OrderType    `protobuf:"varint,8,opt,name=origType,proto3,enum=services.delivery.v1.OrderType" json:"origType,omitempty"`
	Price         float64      `protobuf:"fixed64,9,opt,name=price,proto3" json:"price,omitempty"`
	ReduceOnly    bool         `protobuf:"varint,10,opt,name=reduceOnly,proto3" json:"reduceOnly,omitempty"`
	Side          OrderSide    `protobuf:"varint,11,opt,name=side,proto3,enum=services.delivery.v1.OrderSide" json:"side,omitempty"`
	PositionSide  PositionSide `protobuf:"varint,12,opt,name=positionSide,proto3,enum=services.delivery.v1.PositionSide" json:"positionSide,omitempty"`
	Status        OrderStatus  `protobuf:"varint,13,opt,name=status,proto3,enum=services.delivery.v1.OrderStatus" json:"status,omitempty"`
	StopPrice     float64      `protobuf:"fixed64,14,opt,name=stopPrice,proto3" json:"stopPrice,omitempty"`
	ClosePosition bool         `protobuf:"varint,15,opt,name=closePosition,proto3" json:"closePosition,omitempty"`
	Symbol        string       `protobuf:"bytes,16,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Pair          string       `protobuf:"bytes,17,opt,name=pair,proto3" json:"pair,omitempty"`
	TimeInForce   TimeInForce  `protobuf:"varint,18,opt,name=timeInForce,proto3,enum=services.delivery.v1.TimeInForce" json:"timeInForce,omitempty"`
	Type          OrderType    `protobuf:"varint,19,opt,name=type,proto3,enum=services.delivery.v1.OrderType" json:"type,omitempty"`
	ActivatePrice float64      `protobuf:"fixed64,20,opt,name=activatePrice,proto3" json:"activatePrice,omitempty"`
	PriceRate     float64      `protobuf:"fixed64,21,opt,name=priceRate,proto3" json:"priceRate,omitempty"`
	UpdateTime    int64        `protobuf:"varint,22,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	WorkingType   WorkingType  `protobuf:"varint,23,opt,name=workingType,proto3,enum=services.delivery.v1.WorkingType" json:"workingType,omitempty"`
	PriceProtect  bool         `protobuf:"varint,24,opt,name=priceProtect,proto3" json:"priceProtect,omitempty"`
}

func (x *CancelOrderResponse) Reset() {
	*x = CancelOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderResponse) ProtoMessage() {}

func (x *CancelOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderResponse.ProtoReflect.Descriptor instead.
func (*CancelOrderResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{5}
}

func (x *CancelOrderResponse) GetAvgPrice() float64 {
	if x != nil {
		return x.AvgPrice
	}
	return 0
}

func (x *CancelOrderResponse) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

func (x *CancelOrderResponse) GetCumQty() float64 {
	if x != nil {
		return x.CumQty
	}
	return 0
}

func (x *CancelOrderResponse) GetCumBase() float64 {
	if x != nil {
		return x.CumBase
	}
	return 0
}

func (x *CancelOrderResponse) GetExecutedQty() float64 {
	if x != nil {
		return x.ExecutedQty
	}
	return 0
}

func (x *CancelOrderResponse) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *CancelOrderResponse) GetOrigQty() string {
	if x != nil {
		return x.OrigQty
	}
	return ""
}

func (x *CancelOrderResponse) GetOrigType() OrderType {
	if x != nil {
		return x.OrigType
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *CancelOrderResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CancelOrderResponse) GetReduceOnly() bool {
	if x != nil {
		return x.ReduceOnly
	}
	return false
}

func (x *CancelOrderResponse) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_ORDER_SIDE_UNSPECIFIED
}

func (x *CancelOrderResponse) GetPositionSide() PositionSide {
	if x != nil {
		return x.PositionSide
	}
	return PositionSide_BOTH
}

func (x *CancelOrderResponse) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *CancelOrderResponse) GetStopPrice() float64 {
	if x != nil {
		return x.StopPrice
	}
	return 0
}

func (x *CancelOrderResponse) GetClosePosition() bool {
	if x != nil {
		return x.ClosePosition
	}
	return false
}

func (x *CancelOrderResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CancelOrderResponse) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *CancelOrderResponse) GetTimeInForce() TimeInForce {
	if x != nil {
		return x.TimeInForce
	}
	return TimeInForce_TIME_IN_FORCE_UNSPECIFIED
}

func (x *CancelOrderResponse) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *CancelOrderResponse) GetActivatePrice() float64 {
	if x != nil {
		return x.ActivatePrice
	}
	return 0
}

func (x *CancelOrderResponse) GetPriceRate() float64 {
	if x != nil {
		return x.PriceRate
	}
	return 0
}

func (x *CancelOrderResponse) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *CancelOrderResponse) GetWorkingType() WorkingType {
	if x != nil {
		return x.WorkingType
	}
	return WorkingType_WORKING_TYPE_UNSPECIFIED
}

func (x *CancelOrderResponse) GetPriceProtect() bool {
	if x != nil {
		return x.PriceProtect
	}
	return false
}

type ModifyOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId           int64     `protobuf:"varint,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	OrigClientOrderId string    `protobuf:"bytes,2,opt,name=origClientOrderId,proto3" json:"origClientOrderId,omitempty"`
	Symbol            string    `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Side              OrderSide `protobuf:"varint,4,opt,name=side,proto3,enum=services.delivery.v1.OrderSide" json:"side,omitempty"`
	Quantity          float64   `protobuf:"fixed64,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price             float64   `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	RecvWindow        int64     `protobuf:"varint,7,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *ModifyOrderRequest) Reset() {
	*x = ModifyOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyOrderRequest) ProtoMessage() {}

func (x *ModifyOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyOrderRequest.ProtoReflect.Descriptor instead.
func (*ModifyOrderRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{6}
}

func (x *ModifyOrderRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *ModifyOrderRequest) GetOrigClientOrderId() string {
	if x != nil {
		return x.OrigClientOrderId
	}
	return ""
}

func (x *ModifyOrderRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ModifyOrderRequest) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_ORDER_SIDE_UNSPECIFIED
}

func (x *ModifyOrderRequest) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ModifyOrderRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ModifyOrderRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type ModifyOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId       int64        `protobuf:"varint,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	ClientOrderId string       `protobuf:"bytes,2,opt,name=clientOrderId,proto3" json:"clientOrderId,omitempty"`
	Symbol        string       `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Side          OrderSide    `protobuf:"varint,4,opt,name=side,proto3,enum=services.delivery.v1.OrderSide" json:"side,omitempty"`
	Price         float64      `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	Pair          string       `protobuf:"bytes,6,opt,name=pair,proto3" json:"pair,omitempty"`
	Status        OrderStatus  `protobuf:"varint,7,opt,name=status,proto3,enum=services.delivery.v1.OrderStatus" json:"status,omitempty"`
	AvgPrice      float64      `protobuf:"fixed64,8,opt,name=avgPrice,proto3" json:"avgPrice,omitempty"`
	OrigQty       float64      `protobuf:"fixed64,9,opt,name=origQty,proto3" json:"origQty,omitempty"`
	ExecutedQty   float64      `protobuf:"fixed64,10,opt,name=executedQty,proto3" json:"executedQty,omitempty"`
	CumQty        float64      `protobuf:"fixed64,11,opt,name=cumQty,proto3" json:"cumQty,omitempty"`
	CumBase       float64      `protobuf:"fixed64,12,opt,name=cumBase,proto3" json:"cumBase,omitempty"`
	TimeInForce   TimeInForce  `protobuf:"varint,13,opt,name=timeInForce,proto3,enum=services.delivery.v1.TimeInForce" json:"timeInForce,omitempty"`
	Type          OrderType    `protobuf:"varint,14,opt,name=type,proto3,enum=services.delivery.v1.OrderType" json:"type,omitempty"`
	ReduceOnly    bool         `protobuf:"varint,15,opt,name=reduceOnly,proto3" json:"reduceOnly,omitempty"`
	ClosePosition bool         `protobuf:"varint,16,opt,name=closePosition,proto3" json:"closePosition,omitempty"`
	PositionSide  PositionSide `protobuf:"varint,17,opt,name=positionSide,proto3,enum=services.delivery.v1.PositionSide" json:"positionSide,omitempty"`
	StopPrice     float64      `protobuf:"fixed64,18,opt,name=stopPrice,proto3" json:"stopPrice,omitempty"`
	WorkingType   WorkingType  `protobuf:"varint,19,opt,name=workingType,proto3,enum=services.delivery.v1.WorkingType" json:"workingType,omitempty"`
	OrigType      OrderType    `protobuf:"varint,20,opt,name=origType,proto3,enum=services.delivery.v1.OrderType" json:"origType,omitempty"`
	PriceProtect  bool         `protobuf:"varint,21,opt,name=priceProtect,proto3" json:"priceProtect,omitempty"`
	UpdateTime    int64        `protobuf:"varint,22,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *ModifyOrderResponse) Reset() {
	*x = ModifyOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyOrderResponse) ProtoMessage() {}

func (x *ModifyOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyOrderResponse.ProtoReflect.Descriptor instead.
func (*ModifyOrderResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{7}
}

func (x *ModifyOrderResponse) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *ModifyOrderResponse) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

func (x *ModifyOrderResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ModifyOrderResponse) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_ORDER_SIDE_UNSPECIFIED
}

func (x *ModifyOrderResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ModifyOrderResponse) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *ModifyOrderResponse) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *ModifyOrderResponse) GetAvgPrice() float64 {
	if x != nil {
		return x.AvgPrice
	}
	return 0
}

func (x *ModifyOrderResponse) GetOrigQty() float64 {
	if x != nil {
		return x.OrigQty
	}
	return 0
}

func (x *ModifyOrderResponse) GetExecutedQty() float64 {
	if x != nil {
		return x.ExecutedQty
	}
	return 0
}

func (x *ModifyOrderResponse) GetCumQty() float64 {
	if x != nil {
		return x.CumQty
	}
	return 0
}

func (x *ModifyOrderResponse) GetCumBase() float64 {
	if x != nil {
		return x.CumBase
	}
	return 0
}

func (x *ModifyOrderResponse) GetTimeInForce() TimeInForce {
	if x != nil {
		return x.TimeInForce
	}
	return TimeInForce_TIME_IN_FORCE_UNSPECIFIED
}

func (x *ModifyOrderResponse) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *ModifyOrderResponse) GetReduceOnly() bool {
	if x != nil {
		return x.ReduceOnly
	}
	return false
}

func (x *ModifyOrderResponse) GetClosePosition() bool {
	if x != nil {
		return x.ClosePosition
	}
	return false
}

func (x *ModifyOrderResponse) GetPositionSide() PositionSide {
	if x != nil {
		return x.PositionSide
	}
	return PositionSide_BOTH
}

func (x *ModifyOrderResponse) GetStopPrice() float64 {
	if x != nil {
		return x.StopPrice
	}
	return 0
}

func (x *ModifyOrderResponse) GetWorkingType() WorkingType {
	if x != nil {
		return x.WorkingType
	}
	return WorkingType_WORKING_TYPE_UNSPECIFIED
}

func (x *ModifyOrderResponse) GetOrigType() OrderType {
	if x != nil {
		return x.OrigType
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *ModifyOrderResponse) GetPriceProtect() bool {
	if x != nil {
		return x.PriceProtect
	}
	return false
}

func (x *ModifyOrderResponse) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type PlaceMultipleOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchOrders []*BatchOrders `protobuf:"bytes,1,rep,name=batchOrders,proto3" json:"batchOrders,omitempty"`
	RecvWindow  int64          `protobuf:"varint,2,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *PlaceMultipleOrdersRequest) Reset() {
	*x = PlaceMultipleOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceMultipleOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceMultipleOrdersRequest) ProtoMessage() {}

func (x *PlaceMultipleOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceMultipleOrdersRequest.ProtoReflect.Descriptor instead.
func (*PlaceMultipleOrdersRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{8}
}

func (x *PlaceMultipleOrdersRequest) GetBatchOrders() []*BatchOrders {
	if x != nil {
		return x.BatchOrders
	}
	return nil
}

func (x *PlaceMultipleOrdersRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type PlaceMultipleOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchOrders []*NewOrderResponse `protobuf:"bytes,1,rep,name=batchOrders,proto3" json:"batchOrders,omitempty"`
}

func (x *PlaceMultipleOrdersResponse) Reset() {
	*x = PlaceMultipleOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceMultipleOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceMultipleOrdersResponse) ProtoMessage() {}

func (x *PlaceMultipleOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceMultipleOrdersResponse.ProtoReflect.Descriptor instead.
func (*PlaceMultipleOrdersResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{9}
}

func (x *PlaceMultipleOrdersResponse) GetBatchOrders() []*NewOrderResponse {
	if x != nil {
		return x.BatchOrders
	}
	return nil
}

type ModifyMultipleOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchOrders []*ModifyBatchOrders `protobuf:"bytes,1,rep,name=batchOrders,proto3" json:"batchOrders,omitempty"`
	RecvWindow  int64                `protobuf:"varint,2,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *ModifyMultipleOrdersRequest) Reset() {
	*x = ModifyMultipleOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMultipleOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMultipleOrdersRequest) ProtoMessage() {}

func (x *ModifyMultipleOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMultipleOrdersRequest.ProtoReflect.Descriptor instead.
func (*ModifyMultipleOrdersRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{10}
}

func (x *ModifyMultipleOrdersRequest) GetBatchOrders() []*ModifyBatchOrders {
	if x != nil {
		return x.BatchOrders
	}
	return nil
}

func (x *ModifyMultipleOrdersRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type ModifyMultipleOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchOrders []*ModifyOrderResponse `protobuf:"bytes,1,rep,name=batchOrders,proto3" json:"batchOrders,omitempty"`
}

func (x *ModifyMultipleOrdersResponse) Reset() {
	*x = ModifyMultipleOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMultipleOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMultipleOrdersResponse) ProtoMessage() {}

func (x *ModifyMultipleOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMultipleOrdersResponse.ProtoReflect.Descriptor instead.
func (*ModifyMultipleOrdersResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{11}
}

func (x *ModifyMultipleOrdersResponse) GetBatchOrders() []*ModifyOrderResponse {
	if x != nil {
		return x.BatchOrders
	}
	return nil
}

type CancelAllOpenOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol     string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	RecvWindow int64  `protobuf:"varint,2,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *CancelAllOpenOrdersRequest) Reset() {
	*x = CancelAllOpenOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelAllOpenOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAllOpenOrdersRequest) ProtoMessage() {}

func (x *CancelAllOpenOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAllOpenOrdersRequest.ProtoReflect.Descriptor instead.
func (*CancelAllOpenOrdersRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{12}
}

func (x *CancelAllOpenOrdersRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CancelAllOpenOrdersRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type CancelAllOpenOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CancelAllOpenOrdersResponse) Reset() {
	*x = CancelAllOpenOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelAllOpenOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAllOpenOrdersResponse) ProtoMessage() {}

func (x *CancelAllOpenOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAllOpenOrdersResponse.ProtoReflect.Descriptor instead.
func (*CancelAllOpenOrdersResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{13}
}

func (x *CancelAllOpenOrdersResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CancelAllOpenOrdersResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type AutoCancelAllOpenOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol        string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	CountdownTime int64  `protobuf:"varint,2,opt,name=countdownTime,proto3" json:"countdownTime,omitempty"`
	RecvWindow    int64  `protobuf:"varint,3,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *AutoCancelAllOpenOrdersRequest) Reset() {
	*x = AutoCancelAllOpenOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoCancelAllOpenOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoCancelAllOpenOrdersRequest) ProtoMessage() {}

func (x *AutoCancelAllOpenOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoCancelAllOpenOrdersRequest.ProtoReflect.Descriptor instead.
func (*AutoCancelAllOpenOrdersRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{14}
}

func (x *AutoCancelAllOpenOrdersRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *AutoCancelAllOpenOrdersRequest) GetCountdownTime() int64 {
	if x != nil {
		return x.CountdownTime
	}
	return 0
}

func (x *AutoCancelAllOpenOrdersRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type AutoCancelAllOpenOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol        string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	CountdownTime int64  `protobuf:"varint,2,opt,name=countdownTime,proto3" json:"countdownTime,omitempty"`
}

func (x *AutoCancelAllOpenOrdersResponse) Reset() {
	*x = AutoCancelAllOpenOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoCancelAllOpenOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoCancelAllOpenOrdersResponse) ProtoMessage() {}

func (x *AutoCancelAllOpenOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoCancelAllOpenOrdersResponse.ProtoReflect.Descriptor instead.
func (*AutoCancelAllOpenOrdersResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{15}
}

func (x *AutoCancelAllOpenOrdersResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *AutoCancelAllOpenOrdersResponse) GetCountdownTime() int64 {
	if x != nil {
		return x.CountdownTime
	}
	return 0
}

type ChangeInitialLeverageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol     string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Leverage   int32  `protobuf:"varint,2,opt,name=leverage,proto3" json:"leverage,omitempty"`
	RecvWindow int64  `protobuf:"varint,3,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *ChangeInitialLeverageRequest) Reset() {
	*x = ChangeInitialLeverageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeInitialLeverageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeInitialLeverageRequest) ProtoMessage() {}

func (x *ChangeInitialLeverageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeInitialLeverageRequest.ProtoReflect.Descriptor instead.
func (*ChangeInitialLeverageRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{16}
}

func (x *ChangeInitialLeverageRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ChangeInitialLeverageRequest) GetLeverage() int32 {
	if x != nil {
		return x.Leverage
	}
	return 0
}

func (x *ChangeInitialLeverageRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type ChangeInitialLeverageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol   string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Leverage int32  `protobuf:"varint,2,opt,name=leverage,proto3" json:"leverage,omitempty"`
	MaxQty   int64  `protobuf:"varint,3,opt,name=maxQty,proto3" json:"maxQty,omitempty"`
}

func (x *ChangeInitialLeverageResponse) Reset() {
	*x = ChangeInitialLeverageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeInitialLeverageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeInitialLeverageResponse) ProtoMessage() {}

func (x *ChangeInitialLeverageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeInitialLeverageResponse.ProtoReflect.Descriptor instead.
func (*ChangeInitialLeverageResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{17}
}

func (x *ChangeInitialLeverageResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ChangeInitialLeverageResponse) GetLeverage() int32 {
	if x != nil {
		return x.Leverage
	}
	return 0
}

func (x *ChangeInitialLeverageResponse) GetMaxQty() int64 {
	if x != nil {
		return x.MaxQty
	}
	return 0
}

type ChangeMarginTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol     string     `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	MarginType MarginType `protobuf:"varint,2,opt,name=marginType,proto3,enum=services.delivery.v1.MarginType" json:"marginType,omitempty"`
	RecvWindow int64      `protobuf:"varint,3,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *ChangeMarginTypeRequest) Reset() {
	*x = ChangeMarginTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeMarginTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMarginTypeRequest) ProtoMessage() {}

func (x *ChangeMarginTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMarginTypeRequest.ProtoReflect.Descriptor instead.
func (*ChangeMarginTypeRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{18}
}

func (x *ChangeMarginTypeRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ChangeMarginTypeRequest) GetMarginType() MarginType {
	if x != nil {
		return x.MarginType
	}
	return MarginType_MARGIN_TYPE_UNSPECIFIED
}

func (x *ChangeMarginTypeRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type ChangeMarginTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ChangeMarginTypeResponse) Reset() {
	*x = ChangeMarginTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeMarginTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMarginTypeResponse) ProtoMessage() {}

func (x *ChangeMarginTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMarginTypeResponse.ProtoReflect.Descriptor instead.
func (*ChangeMarginTypeResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{19}
}

func (x *ChangeMarginTypeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ChangeMarginTypeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ModifyIsolatedPositionMarginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol       string       `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	PositionSide PositionSide `protobuf:"varint,2,opt,name=positionSide,proto3,enum=services.delivery.v1.PositionSide" json:"positionSide,omitempty"`
	Amount       float64      `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Type         int32        `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	RecvWindow   int64        `protobuf:"varint,5,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *ModifyIsolatedPositionMarginRequest) Reset() {
	*x = ModifyIsolatedPositionMarginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyIsolatedPositionMarginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyIsolatedPositionMarginRequest) ProtoMessage() {}

func (x *ModifyIsolatedPositionMarginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyIsolatedPositionMarginRequest.ProtoReflect.Descriptor instead.
func (*ModifyIsolatedPositionMarginRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{20}
}

func (x *ModifyIsolatedPositionMarginRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ModifyIsolatedPositionMarginRequest) GetPositionSide() PositionSide {
	if x != nil {
		return x.PositionSide
	}
	return PositionSide_BOTH
}

func (x *ModifyIsolatedPositionMarginRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ModifyIsolatedPositionMarginRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ModifyIsolatedPositionMarginRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type ModifyIsolatedPositionMarginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Code   int32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg    string  `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Type   int32   `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ModifyIsolatedPositionMarginResponse) Reset() {
	*x = ModifyIsolatedPositionMarginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyIsolatedPositionMarginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyIsolatedPositionMarginResponse) ProtoMessage() {}

func (x *ModifyIsolatedPositionMarginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyIsolatedPositionMarginResponse.ProtoReflect.Descriptor instead.
func (*ModifyIsolatedPositionMarginResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{21}
}

func (x *ModifyIsolatedPositionMarginResponse) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ModifyIsolatedPositionMarginResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ModifyIsolatedPositionMarginResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ModifyIsolatedPositionMarginResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type GetPositionMarginChangeHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol     string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Type       int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	StartTime  int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Limit      int32  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	RecvWindow int64  `protobuf:"varint,6,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *GetPositionMarginChangeHistoryRequest) Reset() {
	*x = GetPositionMarginChangeHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPositionMarginChangeHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPositionMarginChangeHistoryRequest) ProtoMessage() {}

func (x *GetPositionMarginChangeHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPositionMarginChangeHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetPositionMarginChangeHistoryRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{22}
}

func (x *GetPositionMarginChangeHistoryRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetPositionMarginChangeHistoryRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetPositionMarginChangeHistoryRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetPositionMarginChangeHistoryRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetPositionMarginChangeHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetPositionMarginChangeHistoryRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type GetPositionMarginChangeHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PositionMarginChangeHistory []*PositionMargin `protobuf:"bytes,1,rep,name=positionMarginChangeHistory,proto3" json:"positionMarginChangeHistory,omitempty"`
}

func (x *GetPositionMarginChangeHistoryResponse) Reset() {
	*x = GetPositionMarginChangeHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPositionMarginChangeHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPositionMarginChangeHistoryResponse) ProtoMessage() {}

func (x *GetPositionMarginChangeHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_trade_msg_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPositionMarginChangeHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetPositionMarginChangeHistoryResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_trade_msg_proto_rawDescGZIP(), []int{23}
}

func (x *GetPositionMarginChangeHistoryResponse) GetPositionMarginChangeHistory() []*PositionMargin {
	if x != nil {
		return x.PositionMarginChangeHistory
	}
	return nil
}

var File_services_delivery_v1_trade_msg_proto protoreflect.FileDescriptor

var file_services_delivery_v1_trade_msg_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x73, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x21, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x67, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10,
	0x64, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x64, 0x65,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x42, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x89, 0x06, 0x0a,
	0x0f, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x46, 0x0a,
	0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x69, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65,
	0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x6e, 0x65, 0x77, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x65, 0x77, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x74, 0x6f,
	0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x12, 0x4e, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x10, 0x6e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72,
	0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0xbe, 0x07, 0x0a, 0x10, 0x4e, 0x65, 0x77,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x6d, 0x51, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x63, 0x75, 0x6d, 0x51, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x75,
	0x6d, 0x42, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x64, 0x51, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x64, 0x51, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6f, 0x72, 0x69, 0x67, 0x51, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x6f, 0x72, 0x69, 0x67, 0x51, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x33, 0x0a,
	0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69,
	0x64, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69,
	0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0c, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x43, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46,
	0x6f, 0x72, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x74,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x3b, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x43, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f,
	0x72, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x22, 0xc1, 0x07, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x67, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x76, 0x67, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75,
	0x6d, 0x51, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x63, 0x75, 0x6d, 0x51,
	0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x75, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x51, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x51, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x69, 0x67,
	0x51, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x69, 0x67, 0x51,
	0x74, 0x79, 0x12, 0x3b, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x4f,
	0x6e, 0x6c, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x75, 0x63,
	0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x69, 0x64, 0x65, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69,
	0x64, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69,
	0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x43, 0x0a,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72,
	0x63, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x65, 0x63, 0x74, 0x22, 0xfb, 0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x73,
	0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x22, 0xfd, 0x06, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64,
	0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69,
	0x72, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x69, 0x67,
	0x51, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x69, 0x67, 0x51,
	0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x51, 0x74,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x64, 0x51, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x6d, 0x51, 0x74, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x63, 0x75, 0x6d, 0x51, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63,
	0x75, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x79,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65,
	0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x3b, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x1a, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x43, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x0b, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x67, 0x0a, 0x1b, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22,
	0x88, 0x01, 0x0a, 0x1b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x49, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x0b, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x6b, 0x0a, 0x1c, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x54, 0x0a, 0x1a, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x41, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x43, 0x0a,
	0x1b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x7e, 0x0a, 0x1e, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x41, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x22, 0x5f, 0x0a, 0x1f, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x41, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c,
	0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63,
	0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x6b, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x61, 0x78, 0x51, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x61,
	0x78, 0x51, 0x74, 0x79, 0x22, 0x93, 0x01, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d,
	0x61, 0x72, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x40, 0x0a, 0x0a, 0x6d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x40, 0x0a, 0x18, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xd1, 0x01, 0x0a,
	0x23, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x49, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x46, 0x0a, 0x0c,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x69, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x22, 0x78, 0x0a, 0x24, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x49, 0x73, 0x6f, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x25, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x90,
	0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x1b, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x52, 0x1b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x68, 0x39, 0x38, 0x39, 0x36, 0x2f, 0x62, 0x69, 0x6e, 0x67, 0x6f, 0x2d, 0x70, 0x6b, 0x67, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31,
	0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_delivery_v1_trade_msg_proto_rawDescOnce sync.Once
	file_services_delivery_v1_trade_msg_proto_rawDescData = file_services_delivery_v1_trade_msg_proto_rawDesc
)

func file_services_delivery_v1_trade_msg_proto_rawDescGZIP() []byte {
	file_services_delivery_v1_trade_msg_proto_rawDescOnce.Do(func() {
		file_services_delivery_v1_trade_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_delivery_v1_trade_msg_proto_rawDescData)
	})
	return file_services_delivery_v1_trade_msg_proto_rawDescData
}

var file_services_delivery_v1_trade_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_services_delivery_v1_trade_msg_proto_goTypes = []interface{}{
	(*ChangePositionModeRequest)(nil),              // 0: services.delivery.v1.ChangePositionModeRequest
	(*ChangePositionModeResponse)(nil),             // 1: services.delivery.v1.ChangePositionModeResponse
	(*NewOrderRequest)(nil),                        // 2: services.delivery.v1.NewOrderRequest
	(*NewOrderResponse)(nil),                       // 3: services.delivery.v1.NewOrderResponse
	(*CancelOrderRequest)(nil),                     // 4: services.delivery.v1.CancelOrderRequest
	(*CancelOrderResponse)(nil),                    // 5: services.delivery.v1.CancelOrderResponse
	(*ModifyOrderRequest)(nil),                     // 6: services.delivery.v1.ModifyOrderRequest
	(*ModifyOrderResponse)(nil),                    // 7: services.delivery.v1.ModifyOrderResponse
	(*PlaceMultipleOrdersRequest)(nil),             // 8: services.delivery.v1.PlaceMultipleOrdersRequest
	(*PlaceMultipleOrdersResponse)(nil),            // 9: services.delivery.v1.PlaceMultipleOrdersResponse
	(*ModifyMultipleOrdersRequest)(nil),            // 10: services.delivery.v1.ModifyMultipleOrdersRequest
	(*ModifyMultipleOrdersResponse)(nil),           // 11: services.delivery.v1.ModifyMultipleOrdersResponse
	(*CancelAllOpenOrdersRequest)(nil),             // 12: services.delivery.v1.CancelAllOpenOrdersRequest
	(*CancelAllOpenOrdersResponse)(nil),            // 13: services.delivery.v1.CancelAllOpenOrdersResponse
	(*AutoCancelAllOpenOrdersRequest)(nil),         // 14: services.delivery.v1.AutoCancelAllOpenOrdersRequest
	(*AutoCancelAllOpenOrdersResponse)(nil),        // 15: services.delivery.v1.AutoCancelAllOpenOrdersResponse
	(*ChangeInitialLeverageRequest)(nil),           // 16: services.delivery.v1.ChangeInitialLeverageRequest
	(*ChangeInitialLeverageResponse)(nil),          // 17: services.delivery.v1.ChangeInitialLeverageResponse
	(*ChangeMarginTypeRequest)(nil),                // 18: services.delivery.v1.ChangeMarginTypeRequest
	(*ChangeMarginTypeResponse)(nil),               // 19: services.delivery.v1.ChangeMarginTypeResponse
	(*ModifyIsolatedPositionMarginRequest)(nil),    // 20: services.delivery.v1.ModifyIsolatedPositionMarginRequest
	(*ModifyIsolatedPositionMarginResponse)(nil),   // 21: services.delivery.v1.ModifyIsolatedPositionMarginResponse
	(*GetPositionMarginChangeHistoryRequest)(nil),  // 22: services.delivery.v1.GetPositionMarginChangeHistoryRequest
	(*GetPositionMarginChangeHistoryResponse)(nil), // 23: services.delivery.v1.GetPositionMarginChangeHistoryResponse
	(OrderSide)(0),                                 // 24: services.delivery.v1.OrderSide
	(PositionSide)(0),                              // 25: services.delivery.v1.PositionSide
	(OrderType)(0),                                 // 26: services.delivery.v1.OrderType
	(WorkingType)(0),                               // 27: services.delivery.v1.WorkingType
	(ResponseType)(0),                              // 28: services.delivery.v1.ResponseType
	(TimeInForce)(0),                               // 29: services.delivery.v1.TimeInForce
	(OrderStatus)(0),                               // 30: services.delivery.v1.OrderStatus
	(*BatchOrders)(nil),                            // 31: services.delivery.v1.BatchOrders
	(*ModifyBatchOrders)(nil),                      // 32: services.delivery.v1.ModifyBatchOrders
	(MarginType)(0),                                // 33: services.delivery.v1.MarginType
	(*PositionMargin)(nil),                         // 34: services.delivery.v1.PositionMargin
}
var file_services_delivery_v1_trade_msg_proto_depIdxs = []int32{
	24, // 0: services.delivery.v1.NewOrderRequest.side:type_name -> services.delivery.v1.OrderSide
	25, // 1: services.delivery.v1.NewOrderRequest.positionSide:type_name -> services.delivery.v1.PositionSide
	26, // 2: services.delivery.v1.NewOrderRequest.type:type_name -> services.delivery.v1.OrderType
	27, // 3: services.delivery.v1.NewOrderRequest.workingType:type_name -> services.delivery.v1.WorkingType
	28, // 4: services.delivery.v1.NewOrderRequest.newOrderRespType:type_name -> services.delivery.v1.ResponseType
	29, // 5: services.delivery.v1.NewOrderRequest.timeInForce:type_name -> services.delivery.v1.TimeInForce
	24, // 6: services.delivery.v1.NewOrderResponse.side:type_name -> services.delivery.v1.OrderSide
	25, // 7: services.delivery.v1.NewOrderResponse.positionSide:type_name -> services.delivery.v1.PositionSide
	30, // 8: services.delivery.v1.NewOrderResponse.status:type_name -> services.delivery.v1.OrderStatus
	29, // 9: services.delivery.v1.NewOrderResponse.timeInForce:type_name -> services.delivery.v1.TimeInForce
	26, // 10: services.delivery.v1.NewOrderResponse.type:type_name -> services.delivery.v1.OrderType
	26, // 11: services.delivery.v1.NewOrderResponse.origType:type_name -> services.delivery.v1.OrderType
	27, // 12: services.delivery.v1.NewOrderResponse.workingType:type_name -> services.delivery.v1.WorkingType
	26, // 13: services.delivery.v1.CancelOrderResponse.origType:type_name -> services.delivery.v1.OrderType
	24, // 14: services.delivery.v1.CancelOrderResponse.side:type_name -> services.delivery.v1.OrderSide
	25, // 15: services.delivery.v1.CancelOrderResponse.positionSide:type_name -> services.delivery.v1.PositionSide
	30, // 16: services.delivery.v1.CancelOrderResponse.status:type_name -> services.delivery.v1.OrderStatus
	29, // 17: services.delivery.v1.CancelOrderResponse.timeInForce:type_name -> services.delivery.v1.TimeInForce
	26, // 18: services.delivery.v1.CancelOrderResponse.type:type_name -> services.delivery.v1.OrderType
	27, // 19: services.delivery.v1.CancelOrderResponse.workingType:type_name -> services.delivery.v1.WorkingType
	24, // 20: services.delivery.v1.ModifyOrderRequest.side:type_name -> services.delivery.v1.OrderSide
	24, // 21: services.delivery.v1.ModifyOrderResponse.side:type_name -> services.delivery.v1.OrderSide
	30, // 22: services.delivery.v1.ModifyOrderResponse.status:type_name -> services.delivery.v1.OrderStatus
	29, // 23: services.delivery.v1.ModifyOrderResponse.timeInForce:type_name -> services.delivery.v1.TimeInForce
	26, // 24: services.delivery.v1.ModifyOrderResponse.type:type_name -> services.delivery.v1.OrderType
	25, // 25: services.delivery.v1.ModifyOrderResponse.positionSide:type_name -> services.delivery.v1.PositionSide
	27, // 26: services.delivery.v1.ModifyOrderResponse.workingType:type_name -> services.delivery.v1.WorkingType
	26, // 27: services.delivery.v1.ModifyOrderResponse.origType:type_name -> services.delivery.v1.OrderType
	31, // 28: services.delivery.v1.PlaceMultipleOrdersRequest.batchOrders:type_name -> services.delivery.v1.BatchOrders
	3,  // 29: services.delivery.v1.PlaceMultipleOrdersResponse.batchOrders:type_name -> services.delivery.v1.NewOrderResponse
	32, // 30: services.delivery.v1.ModifyMultipleOrdersRequest.batchOrders:type_name -> services.delivery.v1.ModifyBatchOrders
	7,  // 31: services.delivery.v1.ModifyMultipleOrdersResponse.batchOrders:type_name -> services.delivery.v1.ModifyOrderResponse
	33, // 32: services.delivery.v1.ChangeMarginTypeRequest.marginType:type_name -> services.delivery.v1.MarginType
	25, // 33: services.delivery.v1.ModifyIsolatedPositionMarginRequest.positionSide:type_name -> services.delivery.v1.PositionSide
	34, // 34: services.delivery.v1.GetPositionMarginChangeHistoryResponse.positionMarginChangeHistory:type_name -> services.delivery.v1.PositionMargin
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_services_delivery_v1_trade_msg_proto_init() }
func file_services_delivery_v1_trade_msg_proto_init() {
	if File_services_delivery_v1_trade_msg_proto != nil {
		return
	}
	file_services_delivery_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_services_delivery_v1_trade_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePositionModeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePositionModeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceMultipleOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceMultipleOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMultipleOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMultipleOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelAllOpenOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelAllOpenOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoCancelAllOpenOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoCancelAllOpenOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeInitialLeverageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeInitialLeverageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeMarginTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeMarginTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyIsolatedPositionMarginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyIsolatedPositionMarginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPositionMarginChangeHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_trade_msg_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPositionMarginChangeHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_delivery_v1_trade_msg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_services_delivery_v1_trade_msg_proto_goTypes,
		DependencyIndexes: file_services_delivery_v1_trade_msg_proto_depIdxs,
		MessageInfos:      file_services_delivery_v1_trade_msg_proto_msgTypes,
	}.Build()
	File_services_delivery_v1_trade_msg_proto = out.File
	file_services_delivery_v1_trade_msg_proto_rawDesc = nil
	file_services_delivery_v1_trade_msg_proto_goTypes = nil
	file_services_delivery_v1_trade_msg_proto_depIdxs = nil
}
