// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: services/delivery/v1/user_data_msg.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetOrderModifyHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol            string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	OrderId           int64  `protobuf:"varint,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	OrigClientOrderId string `protobuf:"bytes,3,opt,name=origClientOrderId,proto3" json:"origClientOrderId,omitempty"`
	StartTime         int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime           int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Limit             int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	RecvWindow        int64  `protobuf:"varint,7,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *GetOrderModifyHistoryRequest) Reset() {
	*x = GetOrderModifyHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderModifyHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderModifyHistoryRequest) ProtoMessage() {}

func (x *GetOrderModifyHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderModifyHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetOrderModifyHistoryRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{0}
}

func (x *GetOrderModifyHistoryRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetOrderModifyHistoryRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *GetOrderModifyHistoryRequest) GetOrigClientOrderId() string {
	if x != nil {
		return x.OrigClientOrderId
	}
	return ""
}

func (x *GetOrderModifyHistoryRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetOrderModifyHistoryRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetOrderModifyHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetOrderModifyHistoryRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type GetOrderModifyHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderModifyHistory []*OrderModifyHistory `protobuf:"bytes,1,rep,name=orderModifyHistory,proto3" json:"orderModifyHistory,omitempty"`
}

func (x *GetOrderModifyHistoryResponse) Reset() {
	*x = GetOrderModifyHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderModifyHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderModifyHistoryResponse) ProtoMessage() {}

func (x *GetOrderModifyHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderModifyHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetOrderModifyHistoryResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{1}
}

func (x *GetOrderModifyHistoryResponse) GetOrderModifyHistory() []*OrderModifyHistory {
	if x != nil {
		return x.OrderModifyHistory
	}
	return nil
}

type QueryOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol            string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	OrderId           int64  `protobuf:"varint,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	OrigClientOrderId string `protobuf:"bytes,3,opt,name=origClientOrderId,proto3" json:"origClientOrderId,omitempty"`
	RecvWindow        int64  `protobuf:"varint,4,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *QueryOrderRequest) Reset() {
	*x = QueryOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderRequest) ProtoMessage() {}

func (x *QueryOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderRequest.ProtoReflect.Descriptor instead.
func (*QueryOrderRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{2}
}

func (x *QueryOrderRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *QueryOrderRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *QueryOrderRequest) GetOrigClientOrderId() string {
	if x != nil {
		return x.OrigClientOrderId
	}
	return ""
}

func (x *QueryOrderRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type QueryOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientOrderId string       `protobuf:"bytes,1,opt,name=clientOrderId,proto3" json:"clientOrderId,omitempty"`
	Time          int64        `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	CumBase       float64      `protobuf:"fixed64,3,opt,name=cumBase,proto3" json:"cumBase,omitempty"`
	ExecutedQty   float64      `protobuf:"fixed64,4,opt,name=executedQty,proto3" json:"executedQty,omitempty"`
	OrderId       int64        `protobuf:"varint,5,opt,name=orderId,proto3" json:"orderId,omitempty"`
	AvgPrice      float64      `protobuf:"fixed64,6,opt,name=avgPrice,proto3" json:"avgPrice,omitempty"`
	OrigQty       float64      `protobuf:"fixed64,7,opt,name=origQty,proto3" json:"origQty,omitempty"`
	Price         float64      `protobuf:"fixed64,8,opt,name=price,proto3" json:"price,omitempty"`
	ReduceOnly    bool         `protobuf:"varint,9,opt,name=reduceOnly,proto3" json:"reduceOnly,omitempty"`
	Side          OrderSide    `protobuf:"varint,10,opt,name=side,proto3,enum=services.delivery.v1.OrderSide" json:"side,omitempty"`
	Status        OrderStatus  `protobuf:"varint,11,opt,name=status,proto3,enum=services.delivery.v1.OrderStatus" json:"status,omitempty"`
	StopPrice     float64      `protobuf:"fixed64,12,opt,name=stopPrice,proto3" json:"stopPrice,omitempty"`
	ClosePosition bool         `protobuf:"varint,13,opt,name=closePosition,proto3" json:"closePosition,omitempty"`
	Symbol        string       `protobuf:"bytes,14,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Pair          string       `protobuf:"bytes,15,opt,name=pair,proto3" json:"pair,omitempty"`
	TimeInForce   TimeInForce  `protobuf:"varint,16,opt,name=timeInForce,proto3,enum=services.delivery.v1.TimeInForce" json:"timeInForce,omitempty"`
	Type          OrderType    `protobuf:"varint,17,opt,name=type,proto3,enum=services.delivery.v1.OrderType" json:"type,omitempty"`
	OrigType      OrderType    `protobuf:"varint,18,opt,name=origType,proto3,enum=services.delivery.v1.OrderType" json:"origType,omitempty"`
	ActivatePrice float64      `protobuf:"fixed64,19,opt,name=activatePrice,proto3" json:"activatePrice,omitempty"`
	PriceRate     float64      `protobuf:"fixed64,20,opt,name=priceRate,proto3" json:"priceRate,omitempty"`
	UpdateTime    int64        `protobuf:"varint,21,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	WorkingType   WorkingType  `protobuf:"varint,22,opt,name=workingType,proto3,enum=services.delivery.v1.WorkingType" json:"workingType,omitempty"`
	PriceProtect  bool         `protobuf:"varint,23,opt,name=priceProtect,proto3" json:"priceProtect,omitempty"`
	PositionSide  PositionSide `protobuf:"varint,24,opt,name=positionSide,proto3,enum=services.delivery.v1.PositionSide" json:"positionSide,omitempty"`
}

func (x *QueryOrderResponse) Reset() {
	*x = QueryOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderResponse) ProtoMessage() {}

func (x *QueryOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderResponse.ProtoReflect.Descriptor instead.
func (*QueryOrderResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{3}
}

func (x *QueryOrderResponse) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

func (x *QueryOrderResponse) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *QueryOrderResponse) GetCumBase() float64 {
	if x != nil {
		return x.CumBase
	}
	return 0
}

func (x *QueryOrderResponse) GetExecutedQty() float64 {
	if x != nil {
		return x.ExecutedQty
	}
	return 0
}

func (x *QueryOrderResponse) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *QueryOrderResponse) GetAvgPrice() float64 {
	if x != nil {
		return x.AvgPrice
	}
	return 0
}

func (x *QueryOrderResponse) GetOrigQty() float64 {
	if x != nil {
		return x.OrigQty
	}
	return 0
}

func (x *QueryOrderResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *QueryOrderResponse) GetReduceOnly() bool {
	if x != nil {
		return x.ReduceOnly
	}
	return false
}

func (x *QueryOrderResponse) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_ORDER_SIDE_UNSPECIFIED
}

func (x *QueryOrderResponse) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *QueryOrderResponse) GetStopPrice() float64 {
	if x != nil {
		return x.StopPrice
	}
	return 0
}

func (x *QueryOrderResponse) GetClosePosition() bool {
	if x != nil {
		return x.ClosePosition
	}
	return false
}

func (x *QueryOrderResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *QueryOrderResponse) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *QueryOrderResponse) GetTimeInForce() TimeInForce {
	if x != nil {
		return x.TimeInForce
	}
	return TimeInForce_TIME_IN_FORCE_UNSPECIFIED
}

func (x *QueryOrderResponse) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *QueryOrderResponse) GetOrigType() OrderType {
	if x != nil {
		return x.OrigType
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *QueryOrderResponse) GetActivatePrice() float64 {
	if x != nil {
		return x.ActivatePrice
	}
	return 0
}

func (x *QueryOrderResponse) GetPriceRate() float64 {
	if x != nil {
		return x.PriceRate
	}
	return 0
}

func (x *QueryOrderResponse) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *QueryOrderResponse) GetWorkingType() WorkingType {
	if x != nil {
		return x.WorkingType
	}
	return WorkingType_WORKING_TYPE_UNSPECIFIED
}

func (x *QueryOrderResponse) GetPriceProtect() bool {
	if x != nil {
		return x.PriceProtect
	}
	return false
}

func (x *QueryOrderResponse) GetPositionSide() PositionSide {
	if x != nil {
		return x.PositionSide
	}
	return PositionSide_BOTH
}

type GetPositionModeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DualSidePosition bool `protobuf:"varint,1,opt,name=dualSidePosition,proto3" json:"dualSidePosition,omitempty"`
}

func (x *GetPositionModeResponse) Reset() {
	*x = GetPositionModeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPositionModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPositionModeResponse) ProtoMessage() {}

func (x *GetPositionModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPositionModeResponse.ProtoReflect.Descriptor instead.
func (*GetPositionModeResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{4}
}

func (x *GetPositionModeResponse) GetDualSidePosition() bool {
	if x != nil {
		return x.DualSidePosition
	}
	return false
}

type QueryCurrentOpenOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol            string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	OrderId           int64  `protobuf:"varint,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	OrigClientOrderId string `protobuf:"bytes,3,opt,name=origClientOrderId,proto3" json:"origClientOrderId,omitempty"`
	RecvWindow        int64  `protobuf:"varint,4,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *QueryCurrentOpenOrderRequest) Reset() {
	*x = QueryCurrentOpenOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCurrentOpenOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCurrentOpenOrderRequest) ProtoMessage() {}

func (x *QueryCurrentOpenOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCurrentOpenOrderRequest.ProtoReflect.Descriptor instead.
func (*QueryCurrentOpenOrderRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{5}
}

func (x *QueryCurrentOpenOrderRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *QueryCurrentOpenOrderRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *QueryCurrentOpenOrderRequest) GetOrigClientOrderId() string {
	if x != nil {
		return x.OrigClientOrderId
	}
	return ""
}

func (x *QueryCurrentOpenOrderRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type QueryCurrentOpenOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientOrderId string       `protobuf:"bytes,1,opt,name=clientOrderId,proto3" json:"clientOrderId,omitempty"`
	Time          int64        `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	CumBase       float64      `protobuf:"fixed64,3,opt,name=cumBase,proto3" json:"cumBase,omitempty"`
	ExecutedQty   float64      `protobuf:"fixed64,4,opt,name=executedQty,proto3" json:"executedQty,omitempty"`
	OrderId       int64        `protobuf:"varint,5,opt,name=orderId,proto3" json:"orderId,omitempty"`
	AvgPrice      float64      `protobuf:"fixed64,6,opt,name=avgPrice,proto3" json:"avgPrice,omitempty"`
	OrigQty       float64      `protobuf:"fixed64,7,opt,name=origQty,proto3" json:"origQty,omitempty"`
	Price         float64      `protobuf:"fixed64,8,opt,name=price,proto3" json:"price,omitempty"`
	ReduceOnly    bool         `protobuf:"varint,9,opt,name=reduceOnly,proto3" json:"reduceOnly,omitempty"`
	Side          OrderSide    `protobuf:"varint,10,opt,name=side,proto3,enum=services.delivery.v1.OrderSide" json:"side,omitempty"`
	Status        OrderStatus  `protobuf:"varint,11,opt,name=status,proto3,enum=services.delivery.v1.OrderStatus" json:"status,omitempty"`
	StopPrice     float64      `protobuf:"fixed64,12,opt,name=stopPrice,proto3" json:"stopPrice,omitempty"`
	ClosePosition bool         `protobuf:"varint,13,opt,name=closePosition,proto3" json:"closePosition,omitempty"`
	Symbol        string       `protobuf:"bytes,14,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Pair          string       `protobuf:"bytes,15,opt,name=pair,proto3" json:"pair,omitempty"`
	TimeInForce   TimeInForce  `protobuf:"varint,16,opt,name=timeInForce,proto3,enum=services.delivery.v1.TimeInForce" json:"timeInForce,omitempty"`
	Type          OrderType    `protobuf:"varint,17,opt,name=type,proto3,enum=services.delivery.v1.OrderType" json:"type,omitempty"`
	OrigType      OrderType    `protobuf:"varint,18,opt,name=origType,proto3,enum=services.delivery.v1.OrderType" json:"origType,omitempty"`
	ActivatePrice float64      `protobuf:"fixed64,19,opt,name=activatePrice,proto3" json:"activatePrice,omitempty"`
	PriceRate     float64      `protobuf:"fixed64,20,opt,name=priceRate,proto3" json:"priceRate,omitempty"`
	UpdateTime    int64        `protobuf:"varint,21,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	WorkingType   WorkingType  `protobuf:"varint,22,opt,name=workingType,proto3,enum=services.delivery.v1.WorkingType" json:"workingType,omitempty"`
	PriceProtect  bool         `protobuf:"varint,23,opt,name=priceProtect,proto3" json:"priceProtect,omitempty"`
	PositionSide  PositionSide `protobuf:"varint,24,opt,name=positionSide,proto3,enum=services.delivery.v1.PositionSide" json:"positionSide,omitempty"`
}

func (x *QueryCurrentOpenOrderResponse) Reset() {
	*x = QueryCurrentOpenOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCurrentOpenOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCurrentOpenOrderResponse) ProtoMessage() {}

func (x *QueryCurrentOpenOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCurrentOpenOrderResponse.ProtoReflect.Descriptor instead.
func (*QueryCurrentOpenOrderResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{6}
}

func (x *QueryCurrentOpenOrderResponse) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

func (x *QueryCurrentOpenOrderResponse) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *QueryCurrentOpenOrderResponse) GetCumBase() float64 {
	if x != nil {
		return x.CumBase
	}
	return 0
}

func (x *QueryCurrentOpenOrderResponse) GetExecutedQty() float64 {
	if x != nil {
		return x.ExecutedQty
	}
	return 0
}

func (x *QueryCurrentOpenOrderResponse) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *QueryCurrentOpenOrderResponse) GetAvgPrice() float64 {
	if x != nil {
		return x.AvgPrice
	}
	return 0
}

func (x *QueryCurrentOpenOrderResponse) GetOrigQty() float64 {
	if x != nil {
		return x.OrigQty
	}
	return 0
}

func (x *QueryCurrentOpenOrderResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *QueryCurrentOpenOrderResponse) GetReduceOnly() bool {
	if x != nil {
		return x.ReduceOnly
	}
	return false
}

func (x *QueryCurrentOpenOrderResponse) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_ORDER_SIDE_UNSPECIFIED
}

func (x *QueryCurrentOpenOrderResponse) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *QueryCurrentOpenOrderResponse) GetStopPrice() float64 {
	if x != nil {
		return x.StopPrice
	}
	return 0
}

func (x *QueryCurrentOpenOrderResponse) GetClosePosition() bool {
	if x != nil {
		return x.ClosePosition
	}
	return false
}

func (x *QueryCurrentOpenOrderResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *QueryCurrentOpenOrderResponse) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *QueryCurrentOpenOrderResponse) GetTimeInForce() TimeInForce {
	if x != nil {
		return x.TimeInForce
	}
	return TimeInForce_TIME_IN_FORCE_UNSPECIFIED
}

func (x *QueryCurrentOpenOrderResponse) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *QueryCurrentOpenOrderResponse) GetOrigType() OrderType {
	if x != nil {
		return x.OrigType
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *QueryCurrentOpenOrderResponse) GetActivatePrice() float64 {
	if x != nil {
		return x.ActivatePrice
	}
	return 0
}

func (x *QueryCurrentOpenOrderResponse) GetPriceRate() float64 {
	if x != nil {
		return x.PriceRate
	}
	return 0
}

func (x *QueryCurrentOpenOrderResponse) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *QueryCurrentOpenOrderResponse) GetWorkingType() WorkingType {
	if x != nil {
		return x.WorkingType
	}
	return WorkingType_WORKING_TYPE_UNSPECIFIED
}

func (x *QueryCurrentOpenOrderResponse) GetPriceProtect() bool {
	if x != nil {
		return x.PriceProtect
	}
	return false
}

func (x *QueryCurrentOpenOrderResponse) GetPositionSide() PositionSide {
	if x != nil {
		return x.PositionSide
	}
	return PositionSide_BOTH
}

type CurrentAllOpenOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol     string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Pair       string `protobuf:"bytes,2,opt,name=pair,proto3" json:"pair,omitempty"`
	RecvWindow int64  `protobuf:"varint,3,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *CurrentAllOpenOrdersRequest) Reset() {
	*x = CurrentAllOpenOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentAllOpenOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentAllOpenOrdersRequest) ProtoMessage() {}

func (x *CurrentAllOpenOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentAllOpenOrdersRequest.ProtoReflect.Descriptor instead.
func (*CurrentAllOpenOrdersRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{7}
}

func (x *CurrentAllOpenOrdersRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CurrentAllOpenOrdersRequest) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *CurrentAllOpenOrdersRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type CurrentAllOpenOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentAllOpenOrders []*QueryCurrentOpenOrderResponse `protobuf:"bytes,1,rep,name=currentAllOpenOrders,proto3" json:"currentAllOpenOrders,omitempty"`
}

func (x *CurrentAllOpenOrdersResponse) Reset() {
	*x = CurrentAllOpenOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentAllOpenOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentAllOpenOrdersResponse) ProtoMessage() {}

func (x *CurrentAllOpenOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentAllOpenOrdersResponse.ProtoReflect.Descriptor instead.
func (*CurrentAllOpenOrdersResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{8}
}

func (x *CurrentAllOpenOrdersResponse) GetCurrentAllOpenOrders() []*QueryCurrentOpenOrderResponse {
	if x != nil {
		return x.CurrentAllOpenOrders
	}
	return nil
}

type AllOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol     string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Pair       string `protobuf:"bytes,2,opt,name=pair,proto3" json:"pair,omitempty"`
	OrderId    int64  `protobuf:"varint,3,opt,name=orderId,proto3" json:"orderId,omitempty"`
	StartTime  int64  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Limit      int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	RecvWindow int64  `protobuf:"varint,7,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *AllOrdersRequest) Reset() {
	*x = AllOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllOrdersRequest) ProtoMessage() {}

func (x *AllOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllOrdersRequest.ProtoReflect.Descriptor instead.
func (*AllOrdersRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{9}
}

func (x *AllOrdersRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *AllOrdersRequest) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *AllOrdersRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *AllOrdersRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AllOrdersRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AllOrdersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AllOrdersRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type AllOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllOrders []*QueryCurrentOpenOrderResponse `protobuf:"bytes,1,rep,name=allOrders,proto3" json:"allOrders,omitempty"`
}

func (x *AllOrdersResponse) Reset() {
	*x = AllOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllOrdersResponse) ProtoMessage() {}

func (x *AllOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllOrdersResponse.ProtoReflect.Descriptor instead.
func (*AllOrdersResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{10}
}

func (x *AllOrdersResponse) GetAllOrders() []*QueryCurrentOpenOrderResponse {
	if x != nil {
		return x.AllOrders
	}
	return nil
}

type FuturesAccountBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FuturesAccountBalance []*Balance `protobuf:"bytes,1,rep,name=futuresAccountBalance,proto3" json:"futuresAccountBalance,omitempty"`
}

func (x *FuturesAccountBalanceResponse) Reset() {
	*x = FuturesAccountBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuturesAccountBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuturesAccountBalanceResponse) ProtoMessage() {}

func (x *FuturesAccountBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuturesAccountBalanceResponse.ProtoReflect.Descriptor instead.
func (*FuturesAccountBalanceResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{11}
}

func (x *FuturesAccountBalanceResponse) GetFuturesAccountBalance() []*Balance {
	if x != nil {
		return x.FuturesAccountBalance
	}
	return nil
}

type PositionInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarginAsset string `protobuf:"bytes,1,opt,name=marginAsset,proto3" json:"marginAsset,omitempty"`
	Pair        string `protobuf:"bytes,2,opt,name=pair,proto3" json:"pair,omitempty"`
	RecvWindow  int64  `protobuf:"varint,3,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *PositionInformationRequest) Reset() {
	*x = PositionInformationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionInformationRequest) ProtoMessage() {}

func (x *PositionInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionInformationRequest.ProtoReflect.Descriptor instead.
func (*PositionInformationRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{12}
}

func (x *PositionInformationRequest) GetMarginAsset() string {
	if x != nil {
		return x.MarginAsset
	}
	return ""
}

func (x *PositionInformationRequest) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *PositionInformationRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type PositionInformationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Positions []*Position `protobuf:"bytes,1,rep,name=positions,proto3" json:"positions,omitempty"`
}

func (x *PositionInformationResponse) Reset() {
	*x = PositionInformationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionInformationResponse) ProtoMessage() {}

func (x *PositionInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionInformationResponse.ProtoReflect.Descriptor instead.
func (*PositionInformationResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{13}
}

func (x *PositionInformationResponse) GetPositions() []*Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

type AccountInformationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets      []*Asset    `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	Positions   []*Position `protobuf:"bytes,2,rep,name=positions,proto3" json:"positions,omitempty"`
	CanDeposit  bool        `protobuf:"varint,3,opt,name=canDeposit,proto3" json:"canDeposit,omitempty"`
	CanTrade    bool        `protobuf:"varint,4,opt,name=canTrade,proto3" json:"canTrade,omitempty"`
	CanWithdraw bool        `protobuf:"varint,5,opt,name=canWithdraw,proto3" json:"canWithdraw,omitempty"`
	FeeTier     int64       `protobuf:"varint,6,opt,name=feeTier,proto3" json:"feeTier,omitempty"`
	UpdateTime  int64       `protobuf:"varint,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *AccountInformationResponse) Reset() {
	*x = AccountInformationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInformationResponse) ProtoMessage() {}

func (x *AccountInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInformationResponse.ProtoReflect.Descriptor instead.
func (*AccountInformationResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{14}
}

func (x *AccountInformationResponse) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *AccountInformationResponse) GetPositions() []*Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *AccountInformationResponse) GetCanDeposit() bool {
	if x != nil {
		return x.CanDeposit
	}
	return false
}

func (x *AccountInformationResponse) GetCanTrade() bool {
	if x != nil {
		return x.CanTrade
	}
	return false
}

func (x *AccountInformationResponse) GetCanWithdraw() bool {
	if x != nil {
		return x.CanWithdraw
	}
	return false
}

func (x *AccountInformationResponse) GetFeeTier() int64 {
	if x != nil {
		return x.FeeTier
	}
	return 0
}

func (x *AccountInformationResponse) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type GetPositionMarginChangeHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol     string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Type       int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	StartTime  int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Limit      int32  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	RecvWindow int64  `protobuf:"varint,6,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *GetPositionMarginChangeHistoryRequest) Reset() {
	*x = GetPositionMarginChangeHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPositionMarginChangeHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPositionMarginChangeHistoryRequest) ProtoMessage() {}

func (x *GetPositionMarginChangeHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPositionMarginChangeHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetPositionMarginChangeHistoryRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{15}
}

func (x *GetPositionMarginChangeHistoryRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetPositionMarginChangeHistoryRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetPositionMarginChangeHistoryRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetPositionMarginChangeHistoryRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetPositionMarginChangeHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetPositionMarginChangeHistoryRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type GetPositionMarginChangeHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PositionMargins []*PositionMargin `protobuf:"bytes,1,rep,name=positionMargins,proto3" json:"positionMargins,omitempty"`
}

func (x *GetPositionMarginChangeHistoryResponse) Reset() {
	*x = GetPositionMarginChangeHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPositionMarginChangeHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPositionMarginChangeHistoryResponse) ProtoMessage() {}

func (x *GetPositionMarginChangeHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPositionMarginChangeHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetPositionMarginChangeHistoryResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{16}
}

func (x *GetPositionMarginChangeHistoryResponse) GetPositionMargins() []*PositionMargin {
	if x != nil {
		return x.PositionMargins
	}
	return nil
}

type AccountTradeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol     string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Pair       string `protobuf:"bytes,2,opt,name=pair,proto3" json:"pair,omitempty"`
	StartTime  int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	FromId     int64  `protobuf:"varint,5,opt,name=fromId,proto3" json:"fromId,omitempty"`
	Limit      int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	RecvWindow int64  `protobuf:"varint,7,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *AccountTradeListRequest) Reset() {
	*x = AccountTradeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountTradeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountTradeListRequest) ProtoMessage() {}

func (x *AccountTradeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountTradeListRequest.ProtoReflect.Descriptor instead.
func (*AccountTradeListRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{17}
}

func (x *AccountTradeListRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *AccountTradeListRequest) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *AccountTradeListRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AccountTradeListRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AccountTradeListRequest) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *AccountTradeListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AccountTradeListRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type AccountTradeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountTrades []*AccountTrade `protobuf:"bytes,1,rep,name=accountTrades,proto3" json:"accountTrades,omitempty"`
}

func (x *AccountTradeListResponse) Reset() {
	*x = AccountTradeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountTradeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountTradeListResponse) ProtoMessage() {}

func (x *AccountTradeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountTradeListResponse.ProtoReflect.Descriptor instead.
func (*AccountTradeListResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{18}
}

func (x *AccountTradeListResponse) GetAccountTrades() []*AccountTrade {
	if x != nil {
		return x.AccountTrades
	}
	return nil
}

type GetIncomeHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol     string     `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	IncomeType IncomeType `protobuf:"varint,2,opt,name=incomeType,proto3,enum=services.delivery.v1.IncomeType" json:"incomeType,omitempty"`
	StartTime  int64      `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64      `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Limit      int32      `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	RecvWindow int64      `protobuf:"varint,6,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *GetIncomeHistoryRequest) Reset() {
	*x = GetIncomeHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIncomeHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncomeHistoryRequest) ProtoMessage() {}

func (x *GetIncomeHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncomeHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetIncomeHistoryRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{19}
}

func (x *GetIncomeHistoryRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetIncomeHistoryRequest) GetIncomeType() IncomeType {
	if x != nil {
		return x.IncomeType
	}
	return IncomeType_INCOME_TYPE_UNSPECIFIED
}

func (x *GetIncomeHistoryRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetIncomeHistoryRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetIncomeHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetIncomeHistoryRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type IncomeHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol     string     `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	IncomeType IncomeType `protobuf:"varint,2,opt,name=incomeType,proto3,enum=services.delivery.v1.IncomeType" json:"incomeType,omitempty"`
	Income     float64    `protobuf:"fixed64,3,opt,name=income,proto3" json:"income,omitempty"`
	Asset      string     `protobuf:"bytes,4,opt,name=asset,proto3" json:"asset,omitempty"`
	Info       string     `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	Time       int64      `protobuf:"varint,6,opt,name=time,proto3" json:"time,omitempty"`
	TranId     string     `protobuf:"bytes,7,opt,name=tranId,proto3" json:"tranId,omitempty"`
	TradeId    string     `protobuf:"bytes,8,opt,name=tradeId,proto3" json:"tradeId,omitempty"`
}

func (x *IncomeHistory) Reset() {
	*x = IncomeHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomeHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomeHistory) ProtoMessage() {}

func (x *IncomeHistory) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomeHistory.ProtoReflect.Descriptor instead.
func (*IncomeHistory) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{20}
}

func (x *IncomeHistory) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *IncomeHistory) GetIncomeType() IncomeType {
	if x != nil {
		return x.IncomeType
	}
	return IncomeType_INCOME_TYPE_UNSPECIFIED
}

func (x *IncomeHistory) GetIncome() float64 {
	if x != nil {
		return x.Income
	}
	return 0
}

func (x *IncomeHistory) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *IncomeHistory) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *IncomeHistory) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *IncomeHistory) GetTranId() string {
	if x != nil {
		return x.TranId
	}
	return ""
}

func (x *IncomeHistory) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

type GetIncomeHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Incomes []*IncomeHistory `protobuf:"bytes,1,rep,name=incomes,proto3" json:"incomes,omitempty"`
}

func (x *GetIncomeHistoryResponse) Reset() {
	*x = GetIncomeHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIncomeHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncomeHistoryResponse) ProtoMessage() {}

func (x *GetIncomeHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncomeHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetIncomeHistoryResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{21}
}

func (x *GetIncomeHistoryResponse) GetIncomes() []*IncomeHistory {
	if x != nil {
		return x.Incomes
	}
	return nil
}

type NotionalBracketForSymbolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair       string `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
	RecvWindow int64  `protobuf:"varint,2,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *NotionalBracketForSymbolRequest) Reset() {
	*x = NotionalBracketForSymbolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotionalBracketForSymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotionalBracketForSymbolRequest) ProtoMessage() {}

func (x *NotionalBracketForSymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotionalBracketForSymbolRequest.ProtoReflect.Descriptor instead.
func (*NotionalBracketForSymbolRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{22}
}

func (x *NotionalBracketForSymbolRequest) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *NotionalBracketForSymbolRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type Bracket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bracket          int32   `protobuf:"varint,1,opt,name=bracket,proto3" json:"bracket,omitempty"`
	InitialLeverage  int32   `protobuf:"varint,2,opt,name=initialLeverage,proto3" json:"initialLeverage,omitempty"`
	QtyCap           float64 `protobuf:"fixed64,3,opt,name=qtyCap,proto3" json:"qtyCap,omitempty"`
	QtylFloor        float64 `protobuf:"fixed64,4,opt,name=qtylFloor,proto3" json:"qtylFloor,omitempty"`
	MaintMarginRatio float64 `protobuf:"fixed64,5,opt,name=maintMarginRatio,proto3" json:"maintMarginRatio,omitempty"`
	Cum              float64 `protobuf:"fixed64,6,opt,name=cum,proto3" json:"cum,omitempty"`
}

func (x *Bracket) Reset() {
	*x = Bracket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bracket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bracket) ProtoMessage() {}

func (x *Bracket) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bracket.ProtoReflect.Descriptor instead.
func (*Bracket) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{23}
}

func (x *Bracket) GetBracket() int32 {
	if x != nil {
		return x.Bracket
	}
	return 0
}

func (x *Bracket) GetInitialLeverage() int32 {
	if x != nil {
		return x.InitialLeverage
	}
	return 0
}

func (x *Bracket) GetQtyCap() float64 {
	if x != nil {
		return x.QtyCap
	}
	return 0
}

func (x *Bracket) GetQtylFloor() float64 {
	if x != nil {
		return x.QtylFloor
	}
	return 0
}

func (x *Bracket) GetMaintMarginRatio() float64 {
	if x != nil {
		return x.MaintMarginRatio
	}
	return 0
}

func (x *Bracket) GetCum() float64 {
	if x != nil {
		return x.Cum
	}
	return 0
}

type NotionalBracketForSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair     string     `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
	Brackets []*Bracket `protobuf:"bytes,2,rep,name=brackets,proto3" json:"brackets,omitempty"`
}

func (x *NotionalBracketForSymbol) Reset() {
	*x = NotionalBracketForSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotionalBracketForSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotionalBracketForSymbol) ProtoMessage() {}

func (x *NotionalBracketForSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotionalBracketForSymbol.ProtoReflect.Descriptor instead.
func (*NotionalBracketForSymbol) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{24}
}

func (x *NotionalBracketForSymbol) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *NotionalBracketForSymbol) GetBrackets() []*Bracket {
	if x != nil {
		return x.Brackets
	}
	return nil
}

type NotionalBracketForSymbolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brackets []*NotionalBracketForSymbol `protobuf:"bytes,1,rep,name=brackets,proto3" json:"brackets,omitempty"`
}

func (x *NotionalBracketForSymbolResponse) Reset() {
	*x = NotionalBracketForSymbolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotionalBracketForSymbolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotionalBracketForSymbolResponse) ProtoMessage() {}

func (x *NotionalBracketForSymbolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotionalBracketForSymbolResponse.ProtoReflect.Descriptor instead.
func (*NotionalBracketForSymbolResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{25}
}

func (x *NotionalBracketForSymbolResponse) GetBrackets() []*NotionalBracketForSymbol {
	if x != nil {
		return x.Brackets
	}
	return nil
}

type NotionalBracketForPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol     string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	RecvWindow int64  `protobuf:"varint,2,opt,name=recvWindow,proto3" json:"recvWindow,omitempty"`
}

func (x *NotionalBracketForPairRequest) Reset() {
	*x = NotionalBracketForPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotionalBracketForPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotionalBracketForPairRequest) ProtoMessage() {}

func (x *NotionalBracketForPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotionalBracketForPairRequest.ProtoReflect.Descriptor instead.
func (*NotionalBracketForPairRequest) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{26}
}

func (x *NotionalBracketForPairRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *NotionalBracketForPairRequest) GetRecvWindow() int64 {
	if x != nil {
		return x.RecvWindow
	}
	return 0
}

type NotionalBracketForPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol   string     `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Brackets []*Bracket `protobuf:"bytes,2,rep,name=brackets,proto3" json:"brackets,omitempty"`
}

func (x *NotionalBracketForPair) Reset() {
	*x = NotionalBracketForPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotionalBracketForPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotionalBracketForPair) ProtoMessage() {}

func (x *NotionalBracketForPair) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotionalBracketForPair.ProtoReflect.Descriptor instead.
func (*NotionalBracketForPair) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{27}
}

func (x *NotionalBracketForPair) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *NotionalBracketForPair) GetBrackets() []*Bracket {
	if x != nil {
		return x.Brackets
	}
	return nil
}

type NotionalBracketForPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brackets []*NotionalBracketForPair `protobuf:"bytes,1,rep,name=brackets,proto3" json:"brackets,omitempty"`
}

func (x *NotionalBracketForPairResponse) Reset() {
	*x = NotionalBracketForPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotionalBracketForPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotionalBracketForPairResponse) ProtoMessage() {}

func (x *NotionalBracketForPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_delivery_v1_user_data_msg_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotionalBracketForPairResponse.ProtoReflect.Descriptor instead.
func (*NotionalBracketForPairResponse) Descriptor() ([]byte, []int) {
	return file_services_delivery_v1_user_data_msg_proto_rawDescGZIP(), []int{28}
}

func (x *NotionalBracketForPairResponse) GetBrackets() []*NotionalBracketForPair {
	if x != nil {
		return x.Brackets
	}
	return nil
}

var File_services_delivery_v1_user_data_msg_proto protoreflect.FileDescriptor

var file_services_delivery_v1_user_data_msg_proto_rawDesc = []byte{
	0x0a, 0x28, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x1a, 0x24, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x73, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x01, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x6f, 0x72, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x79, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x12, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x22, 0x93, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6f,
	0x72, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63,
	0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0xbc, 0x07, 0x0a, 0x12, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75,
	0x6d, 0x42, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x75, 0x6d,
	0x42, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64,
	0x51, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x64, 0x51, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x72, 0x69, 0x67, 0x51, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6f,
	0x72, 0x69, 0x67, 0x51, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x04,
	0x73, 0x69, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64,
	0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x43, 0x0a, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46,
	0x6f, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63,
	0x65, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x12, 0x46, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x22, 0x45, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x64, 0x65, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64,
	0x75, 0x61, 0x6c, 0x53, 0x69, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x9e, 0x01, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f,
	0x72, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x22, 0xc7, 0x07, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63,
	0x75, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x64, 0x51, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x64, 0x51, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x72, 0x69, 0x67, 0x51, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x6f, 0x72, 0x69, 0x67, 0x51, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x33,
	0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73,
	0x69, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x69, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x43,
	0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49,
	0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6f, 0x72, 0x69,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x12, 0x46, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69,
	0x64, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0c, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x22, 0x69, 0x0a, 0x1b, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x87, 0x01, 0x0a, 0x1c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22,
	0xc6, 0x01, 0x0a, 0x10, 0x41, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x66, 0x0a, 0x11, 0x41, 0x6c, 0x6c, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a,
	0x09, 0x61, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x22, 0x74, 0x0a, 0x1d, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x53, 0x0a, 0x15, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x15, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x72, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x5b, 0x0a, 0x1b, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa7, 0x02, 0x0a, 0x1a, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x6e,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63,
	0x61, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6e,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x54, 0x69,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x65, 0x65, 0x54, 0x69, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xc1, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x78, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x52, 0x0f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x73, 0x22,
	0xcb, 0x01, 0x0a, 0x17, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x64, 0x0a,
	0x18, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x22, 0xe1, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x40, 0x0a, 0x0a, 0x69, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x69,
	0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63,
	0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0xf1, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x40, 0x0a, 0x0a, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x63,
	0x6f, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x61,
	0x6e, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x61, 0x6e, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x69, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x69,
	0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x1f, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0xc1, 0x01,
	0x0a, 0x07, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x65,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x71, 0x74, 0x79, 0x43, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x71,
	0x74, 0x79, 0x43, 0x61, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x74, 0x79, 0x6c, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x71, 0x74, 0x79, 0x6c, 0x46, 0x6c,
	0x6f, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x6d,
	0x61, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x63, 0x75,
	0x6d, 0x22, 0x69, 0x0a, 0x18, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69,
	0x72, 0x12, 0x39, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x08, 0x62, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x6e, 0x0a, 0x20,
	0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46,
	0x6f, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x52, 0x08, 0x62, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x57, 0x0a, 0x1d,
	0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46,
	0x6f, 0x72, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x6b, 0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x69, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x39, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x08, 0x62, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x22, 0x6a, 0x0a, 0x1e, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6f, 0x72,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x08, 0x62, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x40,
	0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x39, 0x38,
	0x39, 0x36, 0x2f, 0x62, 0x69, 0x6e, 0x67, 0x6f, 0x2d, 0x70, 0x6b, 0x67, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_delivery_v1_user_data_msg_proto_rawDescOnce sync.Once
	file_services_delivery_v1_user_data_msg_proto_rawDescData = file_services_delivery_v1_user_data_msg_proto_rawDesc
)

func file_services_delivery_v1_user_data_msg_proto_rawDescGZIP() []byte {
	file_services_delivery_v1_user_data_msg_proto_rawDescOnce.Do(func() {
		file_services_delivery_v1_user_data_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_delivery_v1_user_data_msg_proto_rawDescData)
	})
	return file_services_delivery_v1_user_data_msg_proto_rawDescData
}

var file_services_delivery_v1_user_data_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_services_delivery_v1_user_data_msg_proto_goTypes = []interface{}{
	(*GetOrderModifyHistoryRequest)(nil),           // 0: services.delivery.v1.GetOrderModifyHistoryRequest
	(*GetOrderModifyHistoryResponse)(nil),          // 1: services.delivery.v1.GetOrderModifyHistoryResponse
	(*QueryOrderRequest)(nil),                      // 2: services.delivery.v1.QueryOrderRequest
	(*QueryOrderResponse)(nil),                     // 3: services.delivery.v1.QueryOrderResponse
	(*GetPositionModeResponse)(nil),                // 4: services.delivery.v1.GetPositionModeResponse
	(*QueryCurrentOpenOrderRequest)(nil),           // 5: services.delivery.v1.QueryCurrentOpenOrderRequest
	(*QueryCurrentOpenOrderResponse)(nil),          // 6: services.delivery.v1.QueryCurrentOpenOrderResponse
	(*CurrentAllOpenOrdersRequest)(nil),            // 7: services.delivery.v1.CurrentAllOpenOrdersRequest
	(*CurrentAllOpenOrdersResponse)(nil),           // 8: services.delivery.v1.CurrentAllOpenOrdersResponse
	(*AllOrdersRequest)(nil),                       // 9: services.delivery.v1.AllOrdersRequest
	(*AllOrdersResponse)(nil),                      // 10: services.delivery.v1.AllOrdersResponse
	(*FuturesAccountBalanceResponse)(nil),          // 11: services.delivery.v1.FuturesAccountBalanceResponse
	(*PositionInformationRequest)(nil),             // 12: services.delivery.v1.PositionInformationRequest
	(*PositionInformationResponse)(nil),            // 13: services.delivery.v1.PositionInformationResponse
	(*AccountInformationResponse)(nil),             // 14: services.delivery.v1.AccountInformationResponse
	(*GetPositionMarginChangeHistoryRequest)(nil),  // 15: services.delivery.v1.GetPositionMarginChangeHistoryRequest
	(*GetPositionMarginChangeHistoryResponse)(nil), // 16: services.delivery.v1.GetPositionMarginChangeHistoryResponse
	(*AccountTradeListRequest)(nil),                // 17: services.delivery.v1.AccountTradeListRequest
	(*AccountTradeListResponse)(nil),               // 18: services.delivery.v1.AccountTradeListResponse
	(*GetIncomeHistoryRequest)(nil),                // 19: services.delivery.v1.GetIncomeHistoryRequest
	(*IncomeHistory)(nil),                          // 20: services.delivery.v1.IncomeHistory
	(*GetIncomeHistoryResponse)(nil),               // 21: services.delivery.v1.GetIncomeHistoryResponse
	(*NotionalBracketForSymbolRequest)(nil),        // 22: services.delivery.v1.NotionalBracketForSymbolRequest
	(*Bracket)(nil),                                // 23: services.delivery.v1.Bracket
	(*NotionalBracketForSymbol)(nil),               // 24: services.delivery.v1.NotionalBracketForSymbol
	(*NotionalBracketForSymbolResponse)(nil),       // 25: services.delivery.v1.NotionalBracketForSymbolResponse
	(*NotionalBracketForPairRequest)(nil),          // 26: services.delivery.v1.NotionalBracketForPairRequest
	(*NotionalBracketForPair)(nil),                 // 27: services.delivery.v1.NotionalBracketForPair
	(*NotionalBracketForPairResponse)(nil),         // 28: services.delivery.v1.NotionalBracketForPairResponse
	(*OrderModifyHistory)(nil),                     // 29: services.delivery.v1.OrderModifyHistory
	(OrderSide)(0),                                 // 30: services.delivery.v1.OrderSide
	(OrderStatus)(0),                               // 31: services.delivery.v1.OrderStatus
	(TimeInForce)(0),                               // 32: services.delivery.v1.TimeInForce
	(OrderType)(0),                                 // 33: services.delivery.v1.OrderType
	(WorkingType)(0),                               // 34: services.delivery.v1.WorkingType
	(PositionSide)(0),                              // 35: services.delivery.v1.PositionSide
	(*Balance)(nil),                                // 36: services.delivery.v1.Balance
	(*Position)(nil),                               // 37: services.delivery.v1.Position
	(*Asset)(nil),                                  // 38: services.delivery.v1.Asset
	(*PositionMargin)(nil),                         // 39: services.delivery.v1.PositionMargin
	(*AccountTrade)(nil),                           // 40: services.delivery.v1.AccountTrade
	(IncomeType)(0),                                // 41: services.delivery.v1.IncomeType
}
var file_services_delivery_v1_user_data_msg_proto_depIdxs = []int32{
	29, // 0: services.delivery.v1.GetOrderModifyHistoryResponse.orderModifyHistory:type_name -> services.delivery.v1.OrderModifyHistory
	30, // 1: services.delivery.v1.QueryOrderResponse.side:type_name -> services.delivery.v1.OrderSide
	31, // 2: services.delivery.v1.QueryOrderResponse.status:type_name -> services.delivery.v1.OrderStatus
	32, // 3: services.delivery.v1.QueryOrderResponse.timeInForce:type_name -> services.delivery.v1.TimeInForce
	33, // 4: services.delivery.v1.QueryOrderResponse.type:type_name -> services.delivery.v1.OrderType
	33, // 5: services.delivery.v1.QueryOrderResponse.origType:type_name -> services.delivery.v1.OrderType
	34, // 6: services.delivery.v1.QueryOrderResponse.workingType:type_name -> services.delivery.v1.WorkingType
	35, // 7: services.delivery.v1.QueryOrderResponse.positionSide:type_name -> services.delivery.v1.PositionSide
	30, // 8: services.delivery.v1.QueryCurrentOpenOrderResponse.side:type_name -> services.delivery.v1.OrderSide
	31, // 9: services.delivery.v1.QueryCurrentOpenOrderResponse.status:type_name -> services.delivery.v1.OrderStatus
	32, // 10: services.delivery.v1.QueryCurrentOpenOrderResponse.timeInForce:type_name -> services.delivery.v1.TimeInForce
	33, // 11: services.delivery.v1.QueryCurrentOpenOrderResponse.type:type_name -> services.delivery.v1.OrderType
	33, // 12: services.delivery.v1.QueryCurrentOpenOrderResponse.origType:type_name -> services.delivery.v1.OrderType
	34, // 13: services.delivery.v1.QueryCurrentOpenOrderResponse.workingType:type_name -> services.delivery.v1.WorkingType
	35, // 14: services.delivery.v1.QueryCurrentOpenOrderResponse.positionSide:type_name -> services.delivery.v1.PositionSide
	6,  // 15: services.delivery.v1.CurrentAllOpenOrdersResponse.currentAllOpenOrders:type_name -> services.delivery.v1.QueryCurrentOpenOrderResponse
	6,  // 16: services.delivery.v1.AllOrdersResponse.allOrders:type_name -> services.delivery.v1.QueryCurrentOpenOrderResponse
	36, // 17: services.delivery.v1.FuturesAccountBalanceResponse.futuresAccountBalance:type_name -> services.delivery.v1.Balance
	37, // 18: services.delivery.v1.PositionInformationResponse.positions:type_name -> services.delivery.v1.Position
	38, // 19: services.delivery.v1.AccountInformationResponse.assets:type_name -> services.delivery.v1.Asset
	37, // 20: services.delivery.v1.AccountInformationResponse.positions:type_name -> services.delivery.v1.Position
	39, // 21: services.delivery.v1.GetPositionMarginChangeHistoryResponse.positionMargins:type_name -> services.delivery.v1.PositionMargin
	40, // 22: services.delivery.v1.AccountTradeListResponse.accountTrades:type_name -> services.delivery.v1.AccountTrade
	41, // 23: services.delivery.v1.GetIncomeHistoryRequest.incomeType:type_name -> services.delivery.v1.IncomeType
	41, // 24: services.delivery.v1.IncomeHistory.incomeType:type_name -> services.delivery.v1.IncomeType
	20, // 25: services.delivery.v1.GetIncomeHistoryResponse.incomes:type_name -> services.delivery.v1.IncomeHistory
	23, // 26: services.delivery.v1.NotionalBracketForSymbol.brackets:type_name -> services.delivery.v1.Bracket
	24, // 27: services.delivery.v1.NotionalBracketForSymbolResponse.brackets:type_name -> services.delivery.v1.NotionalBracketForSymbol
	23, // 28: services.delivery.v1.NotionalBracketForPair.brackets:type_name -> services.delivery.v1.Bracket
	27, // 29: services.delivery.v1.NotionalBracketForPairResponse.brackets:type_name -> services.delivery.v1.NotionalBracketForPair
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_services_delivery_v1_user_data_msg_proto_init() }
func file_services_delivery_v1_user_data_msg_proto_init() {
	if File_services_delivery_v1_user_data_msg_proto != nil {
		return
	}
	file_services_delivery_v1_trade_msg_proto_init()
	file_services_delivery_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_services_delivery_v1_user_data_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderModifyHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderModifyHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPositionModeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCurrentOpenOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCurrentOpenOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentAllOpenOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentAllOpenOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuturesAccountBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionInformationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionInformationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountInformationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPositionMarginChangeHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPositionMarginChangeHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountTradeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountTradeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIncomeHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomeHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIncomeHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotionalBracketForSymbolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bracket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotionalBracketForSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotionalBracketForSymbolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotionalBracketForPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotionalBracketForPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_delivery_v1_user_data_msg_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotionalBracketForPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_delivery_v1_user_data_msg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_services_delivery_v1_user_data_msg_proto_goTypes,
		DependencyIndexes: file_services_delivery_v1_user_data_msg_proto_depIdxs,
		MessageInfos:      file_services_delivery_v1_user_data_msg_proto_msgTypes,
	}.Build()
	File_services_delivery_v1_user_data_msg_proto = out.File
	file_services_delivery_v1_user_data_msg_proto_rawDesc = nil
	file_services_delivery_v1_user_data_msg_proto_goTypes = nil
	file_services_delivery_v1_user_data_msg_proto_depIdxs = nil
}
